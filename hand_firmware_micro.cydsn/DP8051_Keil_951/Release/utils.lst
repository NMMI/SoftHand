C51 COMPILER V9.51   UTILS                                                                 03/27/2017 13:28:04 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE UTILS
OBJECT MODULE PLACED IN .\DP8051_Keil_951\Release\utils.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -.\utils.c NOIV LARGE MODDP2 OMF2 VB(1) NOIP INCDIR(.,Generated_Source\PSoC3) FF(3) DB DF(NDEBUG) WL(2) PR(.\DP8051_Keil_
                    -951\Release/utils.lst) CD OT(8,SPEED) OJ(.\DP8051_Keil_951\Release\utils.obj)

line level    source

*** MESSAGE C286 IN LINE 0 OF (null): license limits optimization to level 5
   1          // ----------------------------------------------------------------------------
   2          // BSD 3-Clause License
   3          
   4          // Copyright (c) 2016, qbrobotics
   5          // Copyright (c) 2017, Centro "E.Piaggio"
   6          // All rights reserved.
   7          
   8          // Redistribution and use in source and binary forms, with or without
   9          // modification, are permitted provided that the following conditions are met:
  10          
  11          // * Redistributions of source code must retain the above copyright notice, this
  12          //   list of conditions and the following disclaimer.
  13          
  14          // * Redistributions in binary form must reproduce the above copyright notice,
  15          //   this list of conditions and the following disclaimer in the documentation
  16          //   and/or other materials provided with the distribution.
  17          
  18          // * Neither the name of the copyright holder nor the names of its
  19          //   contributors may be used to endorse or promote products derived from
  20          //   this software without specific prior written permission.
  21          
  22          // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  23          // AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  24          // IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  25          // DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  26          // FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  27          // DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  28          // SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29          // CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  30          // OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  31          // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  32          // POSSIBILITY OF SUCH DAMAGE.
  33          // ----------------------------------------------------------------------------
  34          
  35          /**
  36          * \file         utils.c
  37          *
  38          * \brief        Definition of utility functions.
  39          * \date         June 06, 2016
  40          * \author       _qbrobotics_
  41          * \copyright    (C) 2012-2016 qbrobotics. All rights reserved.
  42          * \copyright    (C) 2017 Centro "E.Piaggio". All rights reserved.
  43          */
  44          
  45          #include <utils.h>
  46          #include <math.h>
  47          
  48          //==============================================================================
  49          //                                                            Current Estimation
  50          //==============================================================================
  51          
  52          int32 curr_estim (int32 pos, int32 vel, int32 acc) {
C51 COMPILER V9.51   UTILS                                                                 03/27/2017 13:28:04 PAGE 2   

  53   1          return (abs(g_mem.curr_lookup[0]*pos +
  54   1                      g_mem.curr_lookup[1]*pow(pos,2) + 
  55   1                      g_mem.curr_lookup[2]*pow(pos,3) + 
  56   1                      g_mem.curr_lookup[3]*vel + 
  57   1                      g_mem.curr_lookup[4]*pow(vel,2) + 
  58   1                      g_mem.curr_lookup[5]*acc));
  59   1      }
  60          
  61          //==============================================================================
  62          //                                                   Voltage and current filters
  63          //==============================================================================
  64          
  65          int32 filter_v(int32 new_value) {
  66   1      
  67   1          static int32 old_value, aux;
  68   1      
  69   1          aux = (old_value * (1024 - ALPHA) + (new_value << 6) * (ALPHA)) >> 10;
  70   1      
  71   1          old_value = aux;
  72   1      
  73   1          return (aux >> 6);
  74   1      }
  75          
  76          int32 filter_i1(int32 new_value) {
  77   1      
  78   1          static int32 old_value, aux;
  79   1      
  80   1          aux = (old_value * (1024 - ALPHA) + (new_value << 6) * (ALPHA)) >> 10;
  81   1      
  82   1          old_value = aux;
  83   1      
  84   1          return (aux >> 6);
  85   1      }
  86          
  87          //==============================================================================
  88          //                                                              First Emg Filter
  89          //==============================================================================
  90          
  91          int32 filter_ch1(int32 new_value) {
  92   1      
  93   1          static int32 old_value, aux;
  94   1      
  95   1          aux = (old_value * (1024 - BETA) + new_value * (BETA)) / 1024;
  96   1      
  97   1          old_value = aux;
  98   1      
  99   1          return aux;
 100   1      }
 101          
 102          //==============================================================================
 103          //                                                              Velocity filters
 104          //==============================================================================
 105          
 106          int32 filter_vel_1(int32 new_value) {
 107   1      
 108   1          static int32 old_out, aux;
 109   1      
 110   1          aux = (old_out * (1024 - GAMMA) + new_value * (GAMMA)) / 1024;
 111   1      
 112   1          old_out = aux;
 113   1      
 114   1          return aux;
C51 COMPILER V9.51   UTILS                                                                 03/27/2017 13:28:04 PAGE 3   

 115   1      }
 116          
 117          int32 filter_vel_2(int32 new_value) {
 118   1      
 119   1          static int32 old_out, aux;
 120   1      
 121   1          aux = (old_out * (1024 - GAMMA) + new_value * (GAMMA)) / 1024;
 122   1      
 123   1          old_out = aux;
 124   1      
 125   1          return aux;
 126   1      }
 127          
 128          int32 filter_vel_3(int32 new_value) {
 129   1      
 130   1          static int32 old_out, aux;
 131   1      
 132   1          aux = (old_out * (1024 - GAMMA) + new_value * (GAMMA)) / 1024;
 133   1      
 134   1          old_out = aux;
 135   1      
 136   1          return aux;
 137   1      }
 138          
 139          //==============================================================================
 140          //                                                     Current difference filter
 141          //==============================================================================
 142          
 143          int32 filter_curr_diff(int32 curr_diff) {
 144   1      
 145   1          static int32 old_out, aux, old_input;
 146   1      
 147   1          aux = (old_out * (1024 - 2) + (curr_diff + old_input) * (0.8)) / 1024;
 148   1      
 149   1          old_out = aux;
 150   1          old_input = curr_diff;
 151   1      
 152   1          return aux;
 153   1      }
 154          
 155          //==============================================================================
 156          //                                                             Second Emg Filter
 157          //==============================================================================
 158          
 159          int32 filter_ch2(int32 new_value) {
 160   1      
 161   1          static int32 old_value, aux;
 162   1      
 163   1          aux = (old_value * (1024 - BETA) + new_value * (BETA)) / 1024;
 164   1      
 165   1          old_value = aux;
 166   1      
 167   1          return aux;
 168   1      }
 169          
 170          //==============================================================================
 171          //                                                          Acceleration filters
 172          //==============================================================================
 173          
 174          int32 filter_acc_1(int32 new_value) {
 175   1      
 176   1          static int32 old_out, aux;
C51 COMPILER V9.51   UTILS                                                                 03/27/2017 13:28:04 PAGE 4   

 177   1      
 178   1          aux = (old_out * (1024 - DELTA) + new_value * (DELTA)) / 1024;
 179   1      
 180   1          old_out = aux;
 181   1      
 182   1          return aux;
 183   1      }
 184          
 185          int32 filter_acc_2(int32 new_value) {
 186   1      
 187   1          static int32 old_out, aux;
 188   1      
 189   1          aux = (old_out * (1024 - DELTA) + new_value * (DELTA)) / 1024;
 190   1      
 191   1          old_out = aux;
 192   1      
 193   1          return aux;
 194   1      }
 195          
 196          int32 filter_acc_3(int32 new_value) {
 197   1      
 198   1          static int32 old_out, aux;
 199   1      
 200   1          aux = (old_out * (1024 - DELTA) + new_value * (DELTA)) / 1024;
 201   1      
 202   1          old_out = aux;
 203   1      
 204   1          return aux;
 205   1      }
 206          
 207          //==============================================================================
 208          //                                                                CHECK ENC DATA
 209          //==============================================================================
 210          
 211          // Returns 1 if the encoder data is correct, 0 otherwise
 212          
 213          CYBIT check_enc_data(const uint32 *value) {
 214   1      
 215   1          const uint8* CYIDATA p = (const uint8*)value;
 216   1          uint8 CYDATA a = *p;
 217   1      
 218   1          a = a ^ *(++p);
 219   1          a = a ^ *(++p);
 220   1          a = a ^ *(++p);
 221   1          a = (a & 0x0F) ^ (a>>4);
 222   1      
 223   1          return (0x9669 >> a) & 0x01;
 224   1          //0x9669 is a bit vector representing the !(bitwise XOR) of 4bits
 225   1      }
 226          
 227          //==============================================================================
 228          //                                                                ROUND_FUNCTION
 229          //==============================================================================
 230          
 231          int my_round(const double x) {
 232   1      
 233   1          if (x < 0.0)
 234   1              return (int)(x - 0.5);
 235   1          else
 236   1              return (int)(x + 0.5);
 237   1      }
 238          
C51 COMPILER V9.51   UTILS                                                                 03/27/2017 13:28:04 PAGE 5   

 239          //==============================================================================
 240          //                                                                        MODULE
 241          //==============================================================================
 242          
 243          uint32 my_mod(int32 val, int32 divisor) {
 244   1      
 245   1          if (val >= 0) {
 246   2              return (int32)(val % divisor);
 247   2          } else {
 248   2              return (int32)(divisor - (-val % divisor));
 249   2          }
 250   1      }
 251          
 252          
 253          //==============================================================================
 254          //                                                                     CALIBRATE
 255          //==============================================================================
 256          
 257          void calibration(void) {
 258   1          static uint8 direction;                 //0 closing, 1 opening
 259   1          static uint16 closure_counter;          //Range [0 - 2^16]
 260   1      
 261   1      
 262   1          // closing
 263   1          if (direction == 0) {
 264   2              g_refNew.pos[0] += (calib.speed << g_mem.res[0]);
 265   2              if ((g_refNew.pos[0]) > g_mem.pos_lim_sup[0]) {
 266   3                  direction = 1;
 267   3              }
 268   2          } else { //opening
 269   2              g_refNew.pos[0] -= (calib.speed << g_mem.res[0]);
 270   2              if (SIGN(g_refNew.pos[0]) != 1) {
 271   3                  direction = 0;
 272   3                  closure_counter++;
 273   3                  if (closure_counter == calib.repetitions) {
 274   4                      closure_counter = 0;
 275   4                      calib.enabled = FALSE;
 276   4                  }
 277   3              }
 278   2          }
 279   1      }
 280          
 281          
 282          //==============================================================================
 283          //                                                              HAND COMPARAISON
 284          //==============================================================================
 285          
 286          void hand_comparaison(void) {       // 100 Hz frequency
 287   1          static uint8 mode = 0;         //0 closing, 1 pause, 2 opening
 288   1          static uint16 closure_counter;      // Range [0 - 2^16]
 289   1          static uint32 count = 0;        
 290   1      
 291   1          static uint8 first_time = 1;
 292   1          
 293   1          
 294   1          if (first_time){
 295   2              //timer_val_init = (uint32)HAND_COMP_TIMER_ReadCounter();
 296   2              count = 0;
 297   2              first_time = 0;
 298   2          }
 299   1          
 300   1          switch (mode) {
C51 COMPILER V9.51   UTILS                                                                 03/27/2017 13:28:04 PAGE 6   

 301   2              case 0:             // closing
 302   2                  g_refNew.pos[0] = hand_comp_closure;
 303   2                  if ((g_meas.pos[0]) > hand_comp_closure_threshold*hand_comp_closure) {
 304   3                      hand_comp_current_mode = 1;     // switch to pwm control
 305   3                      g_refNew.pwm[0] = 0;
 306   3                      mode = 1;
 307   3                  }
 308   2                  break;
 309   2              case 1:             // pause
 310   2                  g_refNew.pwm[0] = 0;
 311   2                  //timer_val = (uint32)HAND_COMP_TIMER_ReadCounter();
 312   2                  if (count == (hand_comp_reactivation_time/10000) ){
 313   3                  //if (((uint32)timer_val-(uint32)timer_val_init) > (uint32)hand_comp_reactivation_time) {
 314   3                      hand_comp_current_mode = 0;       // switch to position control
 315   3                      mode = 2;
 316   3                  }
 317   2                  break;
 318   2              case 2:             // opening
 319   2                  g_refNew.pos[0] = 0;
 320   2                  if ((g_meas.pos[0]) < 100 && count == 1000) {   // wait 10 seconds in total
 321   3                      mode = 0;
 322   3                      first_time = 1;
 323   3                      closure_counter++;
 324   3                      if (closure_counter == hand_comp_calib.repetitions) {
 325   4                          closure_counter = 0;
 326   4                          hand_comp_calib.enabled = 0;
 327   4                      }
 328   3                  }
 329   2                  break;
 330   2                  
 331   2          }
 332   1          
 333   1          count = count + 1;
 334   1      }
 335          
 336          
 337          //==============================================================================
 338          //                                                             HANDLE CHECK MODE
 339          //==============================================================================
 340          
 341          void handle_check_mode(void) {       // 100 Hz frequency
 342   1          static uint32 meas_error = 0;
 343   1          static uint8 first_time = 1;
 344   1          static uint32 count = 0;  
 345   1          
 346   1          if (c_mem.double_encoder_on_off) {
 347   2              meas_error = abs(g_meas.pos[2] - g_measOld.pos[2]);
 348   2          } else {
 349   2              meas_error = abs(g_meas.pos[1] - g_measOld.pos[1]);
 350   2          }
 351   1          
 352   1          
 353   1          if (meas_error < c_mem.handle_grasp_thr) {
 354   2                  
 355   2              if (first_time){
 356   3                  count = 0;
 357   3                  first_time = 0;
 358   3              }
 359   2              else {
 360   3                  if (count >= ( (uint32)(c_mem.handle_grasp_time*100) )){ // 100 Hz
 361   4                      hand_comp_current_mode = 1;     // switch to pwm control
 362   4                      g_refNew.pwm[0] = 0;
C51 COMPILER V9.51   UTILS                                                                 03/27/2017 13:28:04 PAGE 7   

 363   4                  }
 364   3                  else {
 365   4                      count = count + 1;
 366   4                  }
 367   3              }
 368   2      
 369   2          }
 370   1          else {
 371   2              // Reset counter if meas_error overcomes the threshold
 372   2              count = 0;
 373   2              hand_comp_current_mode = 0;       // switch to position control
 374   2          }
 375   1      
 376   1      }
 377          
 378          //==============================================================================
 379          //                                                      DOUBLE ENCODER CALC TURN
 380          //==============================================================================
 381          
 382          // Use this matlab function to calculate I1 and I2
 383          //
 384          // function [inv_a, inv_b] = mod_mul_inv(a, b)
 385          //     a = int32(a);
 386          //     b = int32(b);
 387          //     if b == 0
 388          //         inv_a = 1;
 389          //         inv_b = 0;
 390          //         return
 391          //     else
 392          //         q = idivide(a,b,'floor');
 393          //         r = mod(a,b);
 394          //         [s, t] = mod_mul_inv(b, r);
 395          //     end
 396          //     inv_a = t;
 397          //     inv_b = s - q * t;
 398          // return
 399          
 400          // Number of teeth of the two wheels
 401          #define N1 28           ///< Teeth of the first encoder wheel
 402          #define N2 27           ///< Teeth of the second encoder wheel
 403          
 404          #define I1 1            ///< First wheel invariant value
 405          #define I2 (-1)         ///< Second wheel invariant value
 406          
 407          // Number of ticks per turn
 408          #define M 65536          ///< Number of encoder ticks per turn
 409          
 410          
 411          int calc_turns_fcn(const int32 pos1, const int32 pos2) {
 412   1          
 413   1          int32 x = (my_mod( - N2*pos2 - N1*pos1, M*N2) + M/2) / M;
 414   1      
 415   1          int32 aux = my_mod(x*I1, N2);
 416   1          
 417   1          return (my_mod(aux + N2/2, N2) - N2/2);
 418   1      }
 419          
 420          /* [] END OF FILE */
C51 COMPILER V9.51   UTILS                                                                 03/27/2017 13:28:04 PAGE 8   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION _curr_estim (BEGIN)
                                           ; SOURCE LINE # 52
0000 900000      R     MOV     DPTR,#pos
0003 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 53
0006 900000      R     MOV     DPTR,#pos
0009 E0                MOVX    A,@DPTR
000A FC                MOV     R4,A
000B A3                INC     DPTR
000C E0                MOVX    A,@DPTR
000D FD                MOV     R5,A
000E A3                INC     DPTR
000F E0                MOVX    A,@DPTR
0010 FE                MOV     R6,A
0011 A3                INC     DPTR
0012 E0                MOVX    A,@DPTR
0013 FF                MOV     R7,A
0014 EC                MOV     A,R4
0015 120000      E     LCALL   ?C?FCASTL
0018 C004              PUSH    AR4
001A C005              PUSH    AR5
001C C006              PUSH    AR6
001E C007              PUSH    AR7
0020 E4                CLR     A
0021 FF                MOV     R7,A
0022 FE                MOV     R6,A
0023 FD                MOV     R5,A
0024 7C40              MOV     R4,#040H
0026 900000      E     MOV     DPTR,#?_pow?BYTE+04H
0029 120000      E     LCALL   ?C?LSTXDATA
002C D007              POP     AR7
002E D006              POP     AR6
0030 D005              POP     AR5
0032 D004              POP     AR4
0034 120000      E     LCALL   _pow
0037 900000      E     MOV     DPTR,#g_mem+080H
003A E0                MOVX    A,@DPTR
003B F8                MOV     R0,A
003C A3                INC     DPTR
003D E0                MOVX    A,@DPTR
003E F9                MOV     R1,A
003F A3                INC     DPTR
0040 E0                MOVX    A,@DPTR
0041 FA                MOV     R2,A
0042 A3                INC     DPTR
0043 E0                MOVX    A,@DPTR
0044 FB                MOV     R3,A
0045 120000      E     LCALL   ?C?FPMUL
0048 C004              PUSH    AR4
004A C005              PUSH    AR5
004C C006              PUSH    AR6
004E C007              PUSH    AR7
0050 900000      R     MOV     DPTR,#pos
0053 E0                MOVX    A,@DPTR
0054 FC                MOV     R4,A
0055 A3                INC     DPTR
0056 E0                MOVX    A,@DPTR
0057 FD                MOV     R5,A
0058 A3                INC     DPTR
C51 COMPILER V9.51   UTILS                                                                 03/27/2017 13:28:04 PAGE 9   

0059 E0                MOVX    A,@DPTR
005A FE                MOV     R6,A
005B A3                INC     DPTR
005C E0                MOVX    A,@DPTR
005D FF                MOV     R7,A
005E EC                MOV     A,R4
005F 120000      E     LCALL   ?C?FCASTL
0062 900000      E     MOV     DPTR,#g_mem+07CH
0065 E0                MOVX    A,@DPTR
0066 F8                MOV     R0,A
0067 A3                INC     DPTR
0068 E0                MOVX    A,@DPTR
0069 F9                MOV     R1,A
006A A3                INC     DPTR
006B E0                MOVX    A,@DPTR
006C FA                MOV     R2,A
006D A3                INC     DPTR
006E E0                MOVX    A,@DPTR
006F FB                MOV     R3,A
0070 120000      E     LCALL   ?C?FPMUL
0073 D003              POP     AR3
0075 D002              POP     AR2
0077 D001              POP     AR1
0079 D000              POP     AR0
007B 120000      E     LCALL   ?C?FPADD
007E C004              PUSH    AR4
0080 C005              PUSH    AR5
0082 C006              PUSH    AR6
0084 C007              PUSH    AR7
0086 900000      R     MOV     DPTR,#pos
0089 E0                MOVX    A,@DPTR
008A FC                MOV     R4,A
008B A3                INC     DPTR
008C E0                MOVX    A,@DPTR
008D FD                MOV     R5,A
008E A3                INC     DPTR
008F E0                MOVX    A,@DPTR
0090 FE                MOV     R6,A
0091 A3                INC     DPTR
0092 E0                MOVX    A,@DPTR
0093 FF                MOV     R7,A
0094 EC                MOV     A,R4
0095 120000      E     LCALL   ?C?FCASTL
0098 C004              PUSH    AR4
009A C005              PUSH    AR5
009C C006              PUSH    AR6
009E C007              PUSH    AR7
00A0 E4                CLR     A
00A1 FF                MOV     R7,A
00A2 FE                MOV     R6,A
00A3 7D40              MOV     R5,#040H
00A5 7C40              MOV     R4,#040H
00A7 900000      E     MOV     DPTR,#?_pow?BYTE+04H
00AA 120000      E     LCALL   ?C?LSTXDATA
00AD D007              POP     AR7
00AF D006              POP     AR6
00B1 D005              POP     AR5
00B3 D004              POP     AR4
00B5 120000      E     LCALL   _pow
00B8 900000      E     MOV     DPTR,#g_mem+084H
00BB E0                MOVX    A,@DPTR
00BC F8                MOV     R0,A
C51 COMPILER V9.51   UTILS                                                                 03/27/2017 13:28:04 PAGE 10  

00BD A3                INC     DPTR
00BE E0                MOVX    A,@DPTR
00BF F9                MOV     R1,A
00C0 A3                INC     DPTR
00C1 E0                MOVX    A,@DPTR
00C2 FA                MOV     R2,A
00C3 A3                INC     DPTR
00C4 E0                MOVX    A,@DPTR
00C5 FB                MOV     R3,A
00C6 120000      E     LCALL   ?C?FPMUL
00C9 D003              POP     AR3
00CB D002              POP     AR2
00CD D001              POP     AR1
00CF D000              POP     AR0
00D1 120000      E     LCALL   ?C?FPADD
00D4 C004              PUSH    AR4
00D6 C005              PUSH    AR5
00D8 C006              PUSH    AR6
00DA C007              PUSH    AR7
00DC 900000      R     MOV     DPTR,#vel
00DF E0                MOVX    A,@DPTR
00E0 FC                MOV     R4,A
00E1 A3                INC     DPTR
00E2 E0                MOVX    A,@DPTR
00E3 FD                MOV     R5,A
00E4 A3                INC     DPTR
00E5 E0                MOVX    A,@DPTR
00E6 FE                MOV     R6,A
00E7 A3                INC     DPTR
00E8 E0                MOVX    A,@DPTR
00E9 FF                MOV     R7,A
00EA EC                MOV     A,R4
00EB 120000      E     LCALL   ?C?FCASTL
00EE 900000      E     MOV     DPTR,#g_mem+088H
00F1 E0                MOVX    A,@DPTR
00F2 F8                MOV     R0,A
00F3 A3                INC     DPTR
00F4 E0                MOVX    A,@DPTR
00F5 F9                MOV     R1,A
00F6 A3                INC     DPTR
00F7 E0                MOVX    A,@DPTR
00F8 FA                MOV     R2,A
00F9 A3                INC     DPTR
00FA E0                MOVX    A,@DPTR
00FB FB                MOV     R3,A
00FC 120000      E     LCALL   ?C?FPMUL
00FF D003              POP     AR3
0101 D002              POP     AR2
0103 D001              POP     AR1
0105 D000              POP     AR0
0107 120000      E     LCALL   ?C?FPADD
010A C004              PUSH    AR4
010C C005              PUSH    AR5
010E C006              PUSH    AR6
0110 C007              PUSH    AR7
0112 900000      R     MOV     DPTR,#vel
0115 E0                MOVX    A,@DPTR
0116 FC                MOV     R4,A
0117 A3                INC     DPTR
0118 E0                MOVX    A,@DPTR
0119 FD                MOV     R5,A
011A A3                INC     DPTR
C51 COMPILER V9.51   UTILS                                                                 03/27/2017 13:28:04 PAGE 11  

011B E0                MOVX    A,@DPTR
011C FE                MOV     R6,A
011D A3                INC     DPTR
011E E0                MOVX    A,@DPTR
011F FF                MOV     R7,A
0120 EC                MOV     A,R4
0121 120000      E     LCALL   ?C?FCASTL
0124 C004              PUSH    AR4
0126 C005              PUSH    AR5
0128 C006              PUSH    AR6
012A C007              PUSH    AR7
012C E4                CLR     A
012D FF                MOV     R7,A
012E FE                MOV     R6,A
012F FD                MOV     R5,A
0130 7C40              MOV     R4,#040H
0132 900000      E     MOV     DPTR,#?_pow?BYTE+04H
0135 120000      E     LCALL   ?C?LSTXDATA
0138 D007              POP     AR7
013A D006              POP     AR6
013C D005              POP     AR5
013E D004              POP     AR4
0140 120000      E     LCALL   _pow
0143 900000      E     MOV     DPTR,#g_mem+08CH
0146 E0                MOVX    A,@DPTR
0147 F8                MOV     R0,A
0148 A3                INC     DPTR
0149 E0                MOVX    A,@DPTR
014A F9                MOV     R1,A
014B A3                INC     DPTR
014C E0                MOVX    A,@DPTR
014D FA                MOV     R2,A
014E A3                INC     DPTR
014F E0                MOVX    A,@DPTR
0150 FB                MOV     R3,A
0151 120000      E     LCALL   ?C?FPMUL
0154 D003              POP     AR3
0156 D002              POP     AR2
0158 D001              POP     AR1
015A D000              POP     AR0
015C 120000      E     LCALL   ?C?FPADD
015F C004              PUSH    AR4
0161 C005              PUSH    AR5
0163 C006              PUSH    AR6
0165 C007              PUSH    AR7
0167 900000      R     MOV     DPTR,#acc
016A E0                MOVX    A,@DPTR
016B FC                MOV     R4,A
016C A3                INC     DPTR
016D E0                MOVX    A,@DPTR
016E FD                MOV     R5,A
016F A3                INC     DPTR
0170 E0                MOVX    A,@DPTR
0171 FE                MOV     R6,A
0172 A3                INC     DPTR
0173 E0                MOVX    A,@DPTR
0174 FF                MOV     R7,A
0175 EC                MOV     A,R4
0176 120000      E     LCALL   ?C?FCASTL
0179 900000      E     MOV     DPTR,#g_mem+090H
017C E0                MOVX    A,@DPTR
017D F8                MOV     R0,A
C51 COMPILER V9.51   UTILS                                                                 03/27/2017 13:28:04 PAGE 12  

017E A3                INC     DPTR
017F E0                MOVX    A,@DPTR
0180 F9                MOV     R1,A
0181 A3                INC     DPTR
0182 E0                MOVX    A,@DPTR
0183 FA                MOV     R2,A
0184 A3                INC     DPTR
0185 E0                MOVX    A,@DPTR
0186 FB                MOV     R3,A
0187 120000      E     LCALL   ?C?FPMUL
018A D003              POP     AR3
018C D002              POP     AR2
018E D001              POP     AR1
0190 D000              POP     AR0
0192 120000      E     LCALL   ?C?FPADD
0195 120000      E     LCALL   ?C?CASTF
0198 120000      E     LCALL   _abs
019B EE                MOV     A,R6
019C 33                RLC     A
019D 95E0              SUBB    A,ACC
019F FD                MOV     R5,A
01A0 FC                MOV     R4,A
                                           ; SOURCE LINE # 59
01A1         ?C0001:
01A1 22                RET     
             ; FUNCTION _curr_estim (END)

             ; FUNCTION _filter_v (BEGIN)
                                           ; SOURCE LINE # 65
;---- Variable 'new_value' assigned to Register 'R4/R5/R6/R7' ----
                                           ; SOURCE LINE # 69
0000 7806              MOV     R0,#06H
0002 120000      E     LCALL   ?C?LSHL
0005 E4                CLR     A
0006 7B20              MOV     R3,#020H
0008 FA                MOV     R2,A
0009 F9                MOV     R1,A
000A F8                MOV     R0,A
000B 120000      E     LCALL   ?C?LMUL
000E C004              PUSH    AR4
0010 C005              PUSH    AR5
0012 C006              PUSH    AR6
0014 C007              PUSH    AR7
0016 E4                CLR     A
0017 7FE0              MOV     R7,#0E0H
0019 7E03              MOV     R6,#03H
001B FD                MOV     R5,A
001C FC                MOV     R4,A
001D 900000      R     MOV     DPTR,#old_value
0020 E0                MOVX    A,@DPTR
0021 F8                MOV     R0,A
0022 A3                INC     DPTR
0023 E0                MOVX    A,@DPTR
0024 F9                MOV     R1,A
0025 A3                INC     DPTR
0026 E0                MOVX    A,@DPTR
0027 FA                MOV     R2,A
0028 A3                INC     DPTR
0029 E0                MOVX    A,@DPTR
002A FB                MOV     R3,A
002B 120000      E     LCALL   ?C?LMUL
002E D003              POP     AR3
C51 COMPILER V9.51   UTILS                                                                 03/27/2017 13:28:04 PAGE 13  

0030 D002              POP     AR2
0032 D001              POP     AR1
0034 D000              POP     AR0
0036 EF                MOV     A,R7
0037 2B                ADD     A,R3
0038 FF                MOV     R7,A
0039 EE                MOV     A,R6
003A 3A                ADDC    A,R2
003B FE                MOV     R6,A
003C ED                MOV     A,R5
003D 39                ADDC    A,R1
003E FD                MOV     R5,A
003F EC                MOV     A,R4
0040 38                ADDC    A,R0
0041 FC                MOV     R4,A
0042 780A              MOV     R0,#0AH
0044 120000      E     LCALL   ?C?SLSHR
0047 900000      R     MOV     DPTR,#aux
004A 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 71
004D 900000      R     MOV     DPTR,#aux
0050 E0                MOVX    A,@DPTR
0051 FC                MOV     R4,A
0052 A3                INC     DPTR
0053 E0                MOVX    A,@DPTR
0054 FD                MOV     R5,A
0055 A3                INC     DPTR
0056 E0                MOVX    A,@DPTR
0057 FE                MOV     R6,A
0058 A3                INC     DPTR
0059 E0                MOVX    A,@DPTR
005A FF                MOV     R7,A
005B 900000      R     MOV     DPTR,#old_value
005E 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 73
0061 900000      R     MOV     DPTR,#aux
0064 E0                MOVX    A,@DPTR
0065 FC                MOV     R4,A
0066 A3                INC     DPTR
0067 E0                MOVX    A,@DPTR
0068 FD                MOV     R5,A
0069 A3                INC     DPTR
006A E0                MOVX    A,@DPTR
006B FE                MOV     R6,A
006C A3                INC     DPTR
006D E0                MOVX    A,@DPTR
006E FF                MOV     R7,A
006F 7806              MOV     R0,#06H
0071 120000      E     LCALL   ?C?SLSHR
                                           ; SOURCE LINE # 74
0074         ?C0002:
0074 22                RET     
             ; FUNCTION _filter_v (END)

             ; FUNCTION _filter_i1 (BEGIN)
                                           ; SOURCE LINE # 76
;---- Variable 'new_value' assigned to Register 'R4/R5/R6/R7' ----
                                           ; SOURCE LINE # 80
0000 7806              MOV     R0,#06H
0002 120000      E     LCALL   ?C?LSHL
0005 E4                CLR     A
0006 7B20              MOV     R3,#020H
C51 COMPILER V9.51   UTILS                                                                 03/27/2017 13:28:04 PAGE 14  

0008 FA                MOV     R2,A
0009 F9                MOV     R1,A
000A F8                MOV     R0,A
000B 120000      E     LCALL   ?C?LMUL
000E C004              PUSH    AR4
0010 C005              PUSH    AR5
0012 C006              PUSH    AR6
0014 C007              PUSH    AR7
0016 E4                CLR     A
0017 7FE0              MOV     R7,#0E0H
0019 7E03              MOV     R6,#03H
001B FD                MOV     R5,A
001C FC                MOV     R4,A
001D 900000      R     MOV     DPTR,#old_value
0020 E0                MOVX    A,@DPTR
0021 F8                MOV     R0,A
0022 A3                INC     DPTR
0023 E0                MOVX    A,@DPTR
0024 F9                MOV     R1,A
0025 A3                INC     DPTR
0026 E0                MOVX    A,@DPTR
0027 FA                MOV     R2,A
0028 A3                INC     DPTR
0029 E0                MOVX    A,@DPTR
002A FB                MOV     R3,A
002B 120000      E     LCALL   ?C?LMUL
002E D003              POP     AR3
0030 D002              POP     AR2
0032 D001              POP     AR1
0034 D000              POP     AR0
0036 EF                MOV     A,R7
0037 2B                ADD     A,R3
0038 FF                MOV     R7,A
0039 EE                MOV     A,R6
003A 3A                ADDC    A,R2
003B FE                MOV     R6,A
003C ED                MOV     A,R5
003D 39                ADDC    A,R1
003E FD                MOV     R5,A
003F EC                MOV     A,R4
0040 38                ADDC    A,R0
0041 FC                MOV     R4,A
0042 780A              MOV     R0,#0AH
0044 120000      E     LCALL   ?C?SLSHR
0047 900000      R     MOV     DPTR,#aux
004A 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 82
004D 900000      R     MOV     DPTR,#aux
0050 E0                MOVX    A,@DPTR
0051 FC                MOV     R4,A
0052 A3                INC     DPTR
0053 E0                MOVX    A,@DPTR
0054 FD                MOV     R5,A
0055 A3                INC     DPTR
0056 E0                MOVX    A,@DPTR
0057 FE                MOV     R6,A
0058 A3                INC     DPTR
0059 E0                MOVX    A,@DPTR
005A FF                MOV     R7,A
005B 900000      R     MOV     DPTR,#old_value
005E 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 84
C51 COMPILER V9.51   UTILS                                                                 03/27/2017 13:28:04 PAGE 15  

0061 900000      R     MOV     DPTR,#aux
0064 E0                MOVX    A,@DPTR
0065 FC                MOV     R4,A
0066 A3                INC     DPTR
0067 E0                MOVX    A,@DPTR
0068 FD                MOV     R5,A
0069 A3                INC     DPTR
006A E0                MOVX    A,@DPTR
006B FE                MOV     R6,A
006C A3                INC     DPTR
006D E0                MOVX    A,@DPTR
006E FF                MOV     R7,A
006F 7806              MOV     R0,#06H
0071 120000      E     LCALL   ?C?SLSHR
                                           ; SOURCE LINE # 85
0074         ?C0003:
0074 22                RET     
             ; FUNCTION _filter_i1 (END)

             ; FUNCTION _filter_ch1 (BEGIN)
                                           ; SOURCE LINE # 91
0000 900000      R     MOV     DPTR,#new_value
0003 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 95
0006 E4                CLR     A
0007 7F32              MOV     R7,#032H
0009 FE                MOV     R6,A
000A FD                MOV     R5,A
000B FC                MOV     R4,A
000C 900000      R     MOV     DPTR,#new_value
000F E0                MOVX    A,@DPTR
0010 F8                MOV     R0,A
0011 A3                INC     DPTR
0012 E0                MOVX    A,@DPTR
0013 F9                MOV     R1,A
0014 A3                INC     DPTR
0015 E0                MOVX    A,@DPTR
0016 FA                MOV     R2,A
0017 A3                INC     DPTR
0018 E0                MOVX    A,@DPTR
0019 FB                MOV     R3,A
001A 120000      E     LCALL   ?C?LMUL
001D C004              PUSH    AR4
001F C005              PUSH    AR5
0021 C006              PUSH    AR6
0023 C007              PUSH    AR7
0025 E4                CLR     A
0026 7FCE              MOV     R7,#0CEH
0028 7E03              MOV     R6,#03H
002A FD                MOV     R5,A
002B FC                MOV     R4,A
002C 900000      R     MOV     DPTR,#old_value
002F E0                MOVX    A,@DPTR
0030 F8                MOV     R0,A
0031 A3                INC     DPTR
0032 E0                MOVX    A,@DPTR
0033 F9                MOV     R1,A
0034 A3                INC     DPTR
0035 E0                MOVX    A,@DPTR
0036 FA                MOV     R2,A
0037 A3                INC     DPTR
0038 E0                MOVX    A,@DPTR
C51 COMPILER V9.51   UTILS                                                                 03/27/2017 13:28:04 PAGE 16  

0039 FB                MOV     R3,A
003A 120000      E     LCALL   ?C?LMUL
003D D003              POP     AR3
003F D002              POP     AR2
0041 D001              POP     AR1
0043 D000              POP     AR0
0045 EF                MOV     A,R7
0046 2B                ADD     A,R3
0047 FF                MOV     R7,A
0048 EE                MOV     A,R6
0049 3A                ADDC    A,R2
004A FE                MOV     R6,A
004B ED                MOV     A,R5
004C 39                ADDC    A,R1
004D FD                MOV     R5,A
004E EC                MOV     A,R4
004F 38                ADDC    A,R0
0050 FC                MOV     R4,A
0051 E4                CLR     A
0052 FB                MOV     R3,A
0053 7A04              MOV     R2,#04H
0055 F9                MOV     R1,A
0056 F8                MOV     R0,A
0057 120000      E     LCALL   ?C?SLDIV
005A 900000      R     MOV     DPTR,#aux
005D 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 97
0060 900000      R     MOV     DPTR,#aux
0063 E0                MOVX    A,@DPTR
0064 FC                MOV     R4,A
0065 A3                INC     DPTR
0066 E0                MOVX    A,@DPTR
0067 FD                MOV     R5,A
0068 A3                INC     DPTR
0069 E0                MOVX    A,@DPTR
006A FE                MOV     R6,A
006B A3                INC     DPTR
006C E0                MOVX    A,@DPTR
006D FF                MOV     R7,A
006E 900000      R     MOV     DPTR,#old_value
0071 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 99
0074 900000      R     MOV     DPTR,#aux
0077 E0                MOVX    A,@DPTR
0078 FC                MOV     R4,A
0079 A3                INC     DPTR
007A E0                MOVX    A,@DPTR
007B FD                MOV     R5,A
007C A3                INC     DPTR
007D E0                MOVX    A,@DPTR
007E FE                MOV     R6,A
007F A3                INC     DPTR
0080 E0                MOVX    A,@DPTR
0081 FF                MOV     R7,A
                                           ; SOURCE LINE # 100
0082         ?C0004:
0082 22                RET     
             ; FUNCTION _filter_ch1 (END)

             ; FUNCTION _filter_vel_1 (BEGIN)
                                           ; SOURCE LINE # 106
0000 900000      R     MOV     DPTR,#new_value
C51 COMPILER V9.51   UTILS                                                                 03/27/2017 13:28:04 PAGE 17  

0003 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 110
0006 E4                CLR     A
0007 7F20              MOV     R7,#020H
0009 FE                MOV     R6,A
000A FD                MOV     R5,A
000B FC                MOV     R4,A
000C 900000      R     MOV     DPTR,#new_value
000F E0                MOVX    A,@DPTR
0010 F8                MOV     R0,A
0011 A3                INC     DPTR
0012 E0                MOVX    A,@DPTR
0013 F9                MOV     R1,A
0014 A3                INC     DPTR
0015 E0                MOVX    A,@DPTR
0016 FA                MOV     R2,A
0017 A3                INC     DPTR
0018 E0                MOVX    A,@DPTR
0019 FB                MOV     R3,A
001A 120000      E     LCALL   ?C?LMUL
001D C004              PUSH    AR4
001F C005              PUSH    AR5
0021 C006              PUSH    AR6
0023 C007              PUSH    AR7
0025 E4                CLR     A
0026 7FE0              MOV     R7,#0E0H
0028 7E03              MOV     R6,#03H
002A FD                MOV     R5,A
002B FC                MOV     R4,A
002C 900000      R     MOV     DPTR,#old_out
002F E0                MOVX    A,@DPTR
0030 F8                MOV     R0,A
0031 A3                INC     DPTR
0032 E0                MOVX    A,@DPTR
0033 F9                MOV     R1,A
0034 A3                INC     DPTR
0035 E0                MOVX    A,@DPTR
0036 FA                MOV     R2,A
0037 A3                INC     DPTR
0038 E0                MOVX    A,@DPTR
0039 FB                MOV     R3,A
003A 120000      E     LCALL   ?C?LMUL
003D D003              POP     AR3
003F D002              POP     AR2
0041 D001              POP     AR1
0043 D000              POP     AR0
0045 EF                MOV     A,R7
0046 2B                ADD     A,R3
0047 FF                MOV     R7,A
0048 EE                MOV     A,R6
0049 3A                ADDC    A,R2
004A FE                MOV     R6,A
004B ED                MOV     A,R5
004C 39                ADDC    A,R1
004D FD                MOV     R5,A
004E EC                MOV     A,R4
004F 38                ADDC    A,R0
0050 FC                MOV     R4,A
0051 E4                CLR     A
0052 FB                MOV     R3,A
0053 7A04              MOV     R2,#04H
0055 F9                MOV     R1,A
C51 COMPILER V9.51   UTILS                                                                 03/27/2017 13:28:04 PAGE 18  

0056 F8                MOV     R0,A
0057 120000      E     LCALL   ?C?SLDIV
005A 900000      R     MOV     DPTR,#aux
005D 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 112
0060 900000      R     MOV     DPTR,#aux
0063 E0                MOVX    A,@DPTR
0064 FC                MOV     R4,A
0065 A3                INC     DPTR
0066 E0                MOVX    A,@DPTR
0067 FD                MOV     R5,A
0068 A3                INC     DPTR
0069 E0                MOVX    A,@DPTR
006A FE                MOV     R6,A
006B A3                INC     DPTR
006C E0                MOVX    A,@DPTR
006D FF                MOV     R7,A
006E 900000      R     MOV     DPTR,#old_out
0071 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 114
0074 900000      R     MOV     DPTR,#aux
0077 E0                MOVX    A,@DPTR
0078 FC                MOV     R4,A
0079 A3                INC     DPTR
007A E0                MOVX    A,@DPTR
007B FD                MOV     R5,A
007C A3                INC     DPTR
007D E0                MOVX    A,@DPTR
007E FE                MOV     R6,A
007F A3                INC     DPTR
0080 E0                MOVX    A,@DPTR
0081 FF                MOV     R7,A
                                           ; SOURCE LINE # 115
0082         ?C0005:
0082 22                RET     
             ; FUNCTION _filter_vel_1 (END)

             ; FUNCTION _filter_vel_2 (BEGIN)
                                           ; SOURCE LINE # 117
0000 900000      R     MOV     DPTR,#new_value
0003 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 121
0006 E4                CLR     A
0007 7F20              MOV     R7,#020H
0009 FE                MOV     R6,A
000A FD                MOV     R5,A
000B FC                MOV     R4,A
000C 900000      R     MOV     DPTR,#new_value
000F E0                MOVX    A,@DPTR
0010 F8                MOV     R0,A
0011 A3                INC     DPTR
0012 E0                MOVX    A,@DPTR
0013 F9                MOV     R1,A
0014 A3                INC     DPTR
0015 E0                MOVX    A,@DPTR
0016 FA                MOV     R2,A
0017 A3                INC     DPTR
0018 E0                MOVX    A,@DPTR
0019 FB                MOV     R3,A
001A 120000      E     LCALL   ?C?LMUL
001D C004              PUSH    AR4
001F C005              PUSH    AR5
C51 COMPILER V9.51   UTILS                                                                 03/27/2017 13:28:04 PAGE 19  

0021 C006              PUSH    AR6
0023 C007              PUSH    AR7
0025 E4                CLR     A
0026 7FE0              MOV     R7,#0E0H
0028 7E03              MOV     R6,#03H
002A FD                MOV     R5,A
002B FC                MOV     R4,A
002C 900000      R     MOV     DPTR,#old_out
002F E0                MOVX    A,@DPTR
0030 F8                MOV     R0,A
0031 A3                INC     DPTR
0032 E0                MOVX    A,@DPTR
0033 F9                MOV     R1,A
0034 A3                INC     DPTR
0035 E0                MOVX    A,@DPTR
0036 FA                MOV     R2,A
0037 A3                INC     DPTR
0038 E0                MOVX    A,@DPTR
0039 FB                MOV     R3,A
003A 120000      E     LCALL   ?C?LMUL
003D D003              POP     AR3
003F D002              POP     AR2
0041 D001              POP     AR1
0043 D000              POP     AR0
0045 EF                MOV     A,R7
0046 2B                ADD     A,R3
0047 FF                MOV     R7,A
0048 EE                MOV     A,R6
0049 3A                ADDC    A,R2
004A FE                MOV     R6,A
004B ED                MOV     A,R5
004C 39                ADDC    A,R1
004D FD                MOV     R5,A
004E EC                MOV     A,R4
004F 38                ADDC    A,R0
0050 FC                MOV     R4,A
0051 E4                CLR     A
0052 FB                MOV     R3,A
0053 7A04              MOV     R2,#04H
0055 F9                MOV     R1,A
0056 F8                MOV     R0,A
0057 120000      E     LCALL   ?C?SLDIV
005A 900000      R     MOV     DPTR,#aux
005D 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 123
0060 900000      R     MOV     DPTR,#aux
0063 E0                MOVX    A,@DPTR
0064 FC                MOV     R4,A
0065 A3                INC     DPTR
0066 E0                MOVX    A,@DPTR
0067 FD                MOV     R5,A
0068 A3                INC     DPTR
0069 E0                MOVX    A,@DPTR
006A FE                MOV     R6,A
006B A3                INC     DPTR
006C E0                MOVX    A,@DPTR
006D FF                MOV     R7,A
006E 900000      R     MOV     DPTR,#old_out
0071 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 125
0074 900000      R     MOV     DPTR,#aux
0077 E0                MOVX    A,@DPTR
C51 COMPILER V9.51   UTILS                                                                 03/27/2017 13:28:04 PAGE 20  

0078 FC                MOV     R4,A
0079 A3                INC     DPTR
007A E0                MOVX    A,@DPTR
007B FD                MOV     R5,A
007C A3                INC     DPTR
007D E0                MOVX    A,@DPTR
007E FE                MOV     R6,A
007F A3                INC     DPTR
0080 E0                MOVX    A,@DPTR
0081 FF                MOV     R7,A
                                           ; SOURCE LINE # 126
0082         ?C0006:
0082 22                RET     
             ; FUNCTION _filter_vel_2 (END)

             ; FUNCTION _filter_vel_3 (BEGIN)
                                           ; SOURCE LINE # 128
0000 900000      R     MOV     DPTR,#new_value
0003 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 132
0006 E4                CLR     A
0007 7F20              MOV     R7,#020H
0009 FE                MOV     R6,A
000A FD                MOV     R5,A
000B FC                MOV     R4,A
000C 900000      R     MOV     DPTR,#new_value
000F E0                MOVX    A,@DPTR
0010 F8                MOV     R0,A
0011 A3                INC     DPTR
0012 E0                MOVX    A,@DPTR
0013 F9                MOV     R1,A
0014 A3                INC     DPTR
0015 E0                MOVX    A,@DPTR
0016 FA                MOV     R2,A
0017 A3                INC     DPTR
0018 E0                MOVX    A,@DPTR
0019 FB                MOV     R3,A
001A 120000      E     LCALL   ?C?LMUL
001D C004              PUSH    AR4
001F C005              PUSH    AR5
0021 C006              PUSH    AR6
0023 C007              PUSH    AR7
0025 E4                CLR     A
0026 7FE0              MOV     R7,#0E0H
0028 7E03              MOV     R6,#03H
002A FD                MOV     R5,A
002B FC                MOV     R4,A
002C 900000      R     MOV     DPTR,#old_out
002F E0                MOVX    A,@DPTR
0030 F8                MOV     R0,A
0031 A3                INC     DPTR
0032 E0                MOVX    A,@DPTR
0033 F9                MOV     R1,A
0034 A3                INC     DPTR
0035 E0                MOVX    A,@DPTR
0036 FA                MOV     R2,A
0037 A3                INC     DPTR
0038 E0                MOVX    A,@DPTR
0039 FB                MOV     R3,A
003A 120000      E     LCALL   ?C?LMUL
003D D003              POP     AR3
003F D002              POP     AR2
C51 COMPILER V9.51   UTILS                                                                 03/27/2017 13:28:04 PAGE 21  

0041 D001              POP     AR1
0043 D000              POP     AR0
0045 EF                MOV     A,R7
0046 2B                ADD     A,R3
0047 FF                MOV     R7,A
0048 EE                MOV     A,R6
0049 3A                ADDC    A,R2
004A FE                MOV     R6,A
004B ED                MOV     A,R5
004C 39                ADDC    A,R1
004D FD                MOV     R5,A
004E EC                MOV     A,R4
004F 38                ADDC    A,R0
0050 FC                MOV     R4,A
0051 E4                CLR     A
0052 FB                MOV     R3,A
0053 7A04              MOV     R2,#04H
0055 F9                MOV     R1,A
0056 F8                MOV     R0,A
0057 120000      E     LCALL   ?C?SLDIV
005A 900000      R     MOV     DPTR,#aux
005D 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 134
0060 900000      R     MOV     DPTR,#aux
0063 E0                MOVX    A,@DPTR
0064 FC                MOV     R4,A
0065 A3                INC     DPTR
0066 E0                MOVX    A,@DPTR
0067 FD                MOV     R5,A
0068 A3                INC     DPTR
0069 E0                MOVX    A,@DPTR
006A FE                MOV     R6,A
006B A3                INC     DPTR
006C E0                MOVX    A,@DPTR
006D FF                MOV     R7,A
006E 900000      R     MOV     DPTR,#old_out
0071 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 136
0074 900000      R     MOV     DPTR,#aux
0077 E0                MOVX    A,@DPTR
0078 FC                MOV     R4,A
0079 A3                INC     DPTR
007A E0                MOVX    A,@DPTR
007B FD                MOV     R5,A
007C A3                INC     DPTR
007D E0                MOVX    A,@DPTR
007E FE                MOV     R6,A
007F A3                INC     DPTR
0080 E0                MOVX    A,@DPTR
0081 FF                MOV     R7,A
                                           ; SOURCE LINE # 137
0082         ?C0007:
0082 22                RET     
             ; FUNCTION _filter_vel_3 (END)

             ; FUNCTION _filter_curr_diff (BEGIN)
                                           ; SOURCE LINE # 143
0000 900000      R     MOV     DPTR,#curr_diff
0003 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 147
0006 900000      R     MOV     DPTR,#old_input
0009 E0                MOVX    A,@DPTR
C51 COMPILER V9.51   UTILS                                                                 03/27/2017 13:28:04 PAGE 22  

000A FC                MOV     R4,A
000B A3                INC     DPTR
000C E0                MOVX    A,@DPTR
000D FD                MOV     R5,A
000E A3                INC     DPTR
000F E0                MOVX    A,@DPTR
0010 FE                MOV     R6,A
0011 A3                INC     DPTR
0012 E0                MOVX    A,@DPTR
0013 FF                MOV     R7,A
0014 900000      R     MOV     DPTR,#curr_diff
0017 E0                MOVX    A,@DPTR
0018 F8                MOV     R0,A
0019 A3                INC     DPTR
001A E0                MOVX    A,@DPTR
001B F9                MOV     R1,A
001C A3                INC     DPTR
001D E0                MOVX    A,@DPTR
001E FA                MOV     R2,A
001F A3                INC     DPTR
0020 E0                MOVX    A,@DPTR
0021 2F                ADD     A,R7
0022 FF                MOV     R7,A
0023 EA                MOV     A,R2
0024 3E                ADDC    A,R6
0025 FE                MOV     R6,A
0026 E9                MOV     A,R1
0027 3D                ADDC    A,R5
0028 FD                MOV     R5,A
0029 E8                MOV     A,R0
002A 3C                ADDC    A,R4
002B FC                MOV     R4,A
002C 120000      E     LCALL   ?C?FCASTL
002F 7BCD              MOV     R3,#0CDH
0031 7ACC              MOV     R2,#0CCH
0033 794C              MOV     R1,#04CH
0035 783F              MOV     R0,#03FH
0037 120000      E     LCALL   ?C?FPMUL
003A C004              PUSH    AR4
003C C005              PUSH    AR5
003E C006              PUSH    AR6
0040 C007              PUSH    AR7
0042 E4                CLR     A
0043 7FFE              MOV     R7,#0FEH
0045 7E03              MOV     R6,#03H
0047 FD                MOV     R5,A
0048 FC                MOV     R4,A
0049 900000      R     MOV     DPTR,#old_out
004C E0                MOVX    A,@DPTR
004D F8                MOV     R0,A
004E A3                INC     DPTR
004F E0                MOVX    A,@DPTR
0050 F9                MOV     R1,A
0051 A3                INC     DPTR
0052 E0                MOVX    A,@DPTR
0053 FA                MOV     R2,A
0054 A3                INC     DPTR
0055 E0                MOVX    A,@DPTR
0056 FB                MOV     R3,A
0057 120000      E     LCALL   ?C?LMUL
005A EC                MOV     A,R4
005B 120000      E     LCALL   ?C?FCASTL
C51 COMPILER V9.51   UTILS                                                                 03/27/2017 13:28:04 PAGE 23  

005E D003              POP     AR3
0060 D002              POP     AR2
0062 D001              POP     AR1
0064 D000              POP     AR0
0066 120000      E     LCALL   ?C?FPADD
0069 E4                CLR     A
006A FB                MOV     R3,A
006B FA                MOV     R2,A
006C 7980              MOV     R1,#080H
006E 7844              MOV     R0,#044H
0070 120000      E     LCALL   ?C?FPDIV
0073 120000      E     LCALL   ?C?CASTF
0076 900000      R     MOV     DPTR,#aux
0079 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 149
007C 900000      R     MOV     DPTR,#aux
007F E0                MOVX    A,@DPTR
0080 FC                MOV     R4,A
0081 A3                INC     DPTR
0082 E0                MOVX    A,@DPTR
0083 FD                MOV     R5,A
0084 A3                INC     DPTR
0085 E0                MOVX    A,@DPTR
0086 FE                MOV     R6,A
0087 A3                INC     DPTR
0088 E0                MOVX    A,@DPTR
0089 FF                MOV     R7,A
008A 900000      R     MOV     DPTR,#old_out
008D 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 150
0090 900000      R     MOV     DPTR,#curr_diff
0093 E0                MOVX    A,@DPTR
0094 FC                MOV     R4,A
0095 A3                INC     DPTR
0096 E0                MOVX    A,@DPTR
0097 FD                MOV     R5,A
0098 A3                INC     DPTR
0099 E0                MOVX    A,@DPTR
009A FE                MOV     R6,A
009B A3                INC     DPTR
009C E0                MOVX    A,@DPTR
009D FF                MOV     R7,A
009E 900000      R     MOV     DPTR,#old_input
00A1 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 152
00A4 900000      R     MOV     DPTR,#aux
00A7 E0                MOVX    A,@DPTR
00A8 FC                MOV     R4,A
00A9 A3                INC     DPTR
00AA E0                MOVX    A,@DPTR
00AB FD                MOV     R5,A
00AC A3                INC     DPTR
00AD E0                MOVX    A,@DPTR
00AE FE                MOV     R6,A
00AF A3                INC     DPTR
00B0 E0                MOVX    A,@DPTR
00B1 FF                MOV     R7,A
                                           ; SOURCE LINE # 153
00B2         ?C0008:
00B2 22                RET     
             ; FUNCTION _filter_curr_diff (END)

C51 COMPILER V9.51   UTILS                                                                 03/27/2017 13:28:04 PAGE 24  

             ; FUNCTION _filter_ch2 (BEGIN)
                                           ; SOURCE LINE # 159
0000 900000      R     MOV     DPTR,#new_value
0003 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 163
0006 E4                CLR     A
0007 7F32              MOV     R7,#032H
0009 FE                MOV     R6,A
000A FD                MOV     R5,A
000B FC                MOV     R4,A
000C 900000      R     MOV     DPTR,#new_value
000F E0                MOVX    A,@DPTR
0010 F8                MOV     R0,A
0011 A3                INC     DPTR
0012 E0                MOVX    A,@DPTR
0013 F9                MOV     R1,A
0014 A3                INC     DPTR
0015 E0                MOVX    A,@DPTR
0016 FA                MOV     R2,A
0017 A3                INC     DPTR
0018 E0                MOVX    A,@DPTR
0019 FB                MOV     R3,A
001A 120000      E     LCALL   ?C?LMUL
001D C004              PUSH    AR4
001F C005              PUSH    AR5
0021 C006              PUSH    AR6
0023 C007              PUSH    AR7
0025 E4                CLR     A
0026 7FCE              MOV     R7,#0CEH
0028 7E03              MOV     R6,#03H
002A FD                MOV     R5,A
002B FC                MOV     R4,A
002C 900000      R     MOV     DPTR,#old_value
002F E0                MOVX    A,@DPTR
0030 F8                MOV     R0,A
0031 A3                INC     DPTR
0032 E0                MOVX    A,@DPTR
0033 F9                MOV     R1,A
0034 A3                INC     DPTR
0035 E0                MOVX    A,@DPTR
0036 FA                MOV     R2,A
0037 A3                INC     DPTR
0038 E0                MOVX    A,@DPTR
0039 FB                MOV     R3,A
003A 120000      E     LCALL   ?C?LMUL
003D D003              POP     AR3
003F D002              POP     AR2
0041 D001              POP     AR1
0043 D000              POP     AR0
0045 EF                MOV     A,R7
0046 2B                ADD     A,R3
0047 FF                MOV     R7,A
0048 EE                MOV     A,R6
0049 3A                ADDC    A,R2
004A FE                MOV     R6,A
004B ED                MOV     A,R5
004C 39                ADDC    A,R1
004D FD                MOV     R5,A
004E EC                MOV     A,R4
004F 38                ADDC    A,R0
0050 FC                MOV     R4,A
0051 E4                CLR     A
C51 COMPILER V9.51   UTILS                                                                 03/27/2017 13:28:04 PAGE 25  

0052 FB                MOV     R3,A
0053 7A04              MOV     R2,#04H
0055 F9                MOV     R1,A
0056 F8                MOV     R0,A
0057 120000      E     LCALL   ?C?SLDIV
005A 900000      R     MOV     DPTR,#aux
005D 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 165
0060 900000      R     MOV     DPTR,#aux
0063 E0                MOVX    A,@DPTR
0064 FC                MOV     R4,A
0065 A3                INC     DPTR
0066 E0                MOVX    A,@DPTR
0067 FD                MOV     R5,A
0068 A3                INC     DPTR
0069 E0                MOVX    A,@DPTR
006A FE                MOV     R6,A
006B A3                INC     DPTR
006C E0                MOVX    A,@DPTR
006D FF                MOV     R7,A
006E 900000      R     MOV     DPTR,#old_value
0071 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 167
0074 900000      R     MOV     DPTR,#aux
0077 E0                MOVX    A,@DPTR
0078 FC                MOV     R4,A
0079 A3                INC     DPTR
007A E0                MOVX    A,@DPTR
007B FD                MOV     R5,A
007C A3                INC     DPTR
007D E0                MOVX    A,@DPTR
007E FE                MOV     R6,A
007F A3                INC     DPTR
0080 E0                MOVX    A,@DPTR
0081 FF                MOV     R7,A
                                           ; SOURCE LINE # 168
0082         ?C0009:
0082 22                RET     
             ; FUNCTION _filter_ch2 (END)

             ; FUNCTION _filter_acc_1 (BEGIN)
                                           ; SOURCE LINE # 174
0000 900000      R     MOV     DPTR,#new_value
0003 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 178
0006 E4                CLR     A
0007 7F20              MOV     R7,#020H
0009 FE                MOV     R6,A
000A FD                MOV     R5,A
000B FC                MOV     R4,A
000C 900000      R     MOV     DPTR,#new_value
000F E0                MOVX    A,@DPTR
0010 F8                MOV     R0,A
0011 A3                INC     DPTR
0012 E0                MOVX    A,@DPTR
0013 F9                MOV     R1,A
0014 A3                INC     DPTR
0015 E0                MOVX    A,@DPTR
0016 FA                MOV     R2,A
0017 A3                INC     DPTR
0018 E0                MOVX    A,@DPTR
0019 FB                MOV     R3,A
C51 COMPILER V9.51   UTILS                                                                 03/27/2017 13:28:04 PAGE 26  

001A 120000      E     LCALL   ?C?LMUL
001D C004              PUSH    AR4
001F C005              PUSH    AR5
0021 C006              PUSH    AR6
0023 C007              PUSH    AR7
0025 E4                CLR     A
0026 7FE0              MOV     R7,#0E0H
0028 7E03              MOV     R6,#03H
002A FD                MOV     R5,A
002B FC                MOV     R4,A
002C 900000      R     MOV     DPTR,#old_out
002F E0                MOVX    A,@DPTR
0030 F8                MOV     R0,A
0031 A3                INC     DPTR
0032 E0                MOVX    A,@DPTR
0033 F9                MOV     R1,A
0034 A3                INC     DPTR
0035 E0                MOVX    A,@DPTR
0036 FA                MOV     R2,A
0037 A3                INC     DPTR
0038 E0                MOVX    A,@DPTR
0039 FB                MOV     R3,A
003A 120000      E     LCALL   ?C?LMUL
003D D003              POP     AR3
003F D002              POP     AR2
0041 D001              POP     AR1
0043 D000              POP     AR0
0045 EF                MOV     A,R7
0046 2B                ADD     A,R3
0047 FF                MOV     R7,A
0048 EE                MOV     A,R6
0049 3A                ADDC    A,R2
004A FE                MOV     R6,A
004B ED                MOV     A,R5
004C 39                ADDC    A,R1
004D FD                MOV     R5,A
004E EC                MOV     A,R4
004F 38                ADDC    A,R0
0050 FC                MOV     R4,A
0051 E4                CLR     A
0052 FB                MOV     R3,A
0053 7A04              MOV     R2,#04H
0055 F9                MOV     R1,A
0056 F8                MOV     R0,A
0057 120000      E     LCALL   ?C?SLDIV
005A 900000      R     MOV     DPTR,#aux
005D 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 180
0060 900000      R     MOV     DPTR,#aux
0063 E0                MOVX    A,@DPTR
0064 FC                MOV     R4,A
0065 A3                INC     DPTR
0066 E0                MOVX    A,@DPTR
0067 FD                MOV     R5,A
0068 A3                INC     DPTR
0069 E0                MOVX    A,@DPTR
006A FE                MOV     R6,A
006B A3                INC     DPTR
006C E0                MOVX    A,@DPTR
006D FF                MOV     R7,A
006E 900000      R     MOV     DPTR,#old_out
0071 120000      E     LCALL   ?C?LSTXDATA
C51 COMPILER V9.51   UTILS                                                                 03/27/2017 13:28:04 PAGE 27  

                                           ; SOURCE LINE # 182
0074 900000      R     MOV     DPTR,#aux
0077 E0                MOVX    A,@DPTR
0078 FC                MOV     R4,A
0079 A3                INC     DPTR
007A E0                MOVX    A,@DPTR
007B FD                MOV     R5,A
007C A3                INC     DPTR
007D E0                MOVX    A,@DPTR
007E FE                MOV     R6,A
007F A3                INC     DPTR
0080 E0                MOVX    A,@DPTR
0081 FF                MOV     R7,A
                                           ; SOURCE LINE # 183
0082         ?C0010:
0082 22                RET     
             ; FUNCTION _filter_acc_1 (END)

             ; FUNCTION _filter_acc_2 (BEGIN)
                                           ; SOURCE LINE # 185
0000 900000      R     MOV     DPTR,#new_value
0003 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 189
0006 E4                CLR     A
0007 7F20              MOV     R7,#020H
0009 FE                MOV     R6,A
000A FD                MOV     R5,A
000B FC                MOV     R4,A
000C 900000      R     MOV     DPTR,#new_value
000F E0                MOVX    A,@DPTR
0010 F8                MOV     R0,A
0011 A3                INC     DPTR
0012 E0                MOVX    A,@DPTR
0013 F9                MOV     R1,A
0014 A3                INC     DPTR
0015 E0                MOVX    A,@DPTR
0016 FA                MOV     R2,A
0017 A3                INC     DPTR
0018 E0                MOVX    A,@DPTR
0019 FB                MOV     R3,A
001A 120000      E     LCALL   ?C?LMUL
001D C004              PUSH    AR4
001F C005              PUSH    AR5
0021 C006              PUSH    AR6
0023 C007              PUSH    AR7
0025 E4                CLR     A
0026 7FE0              MOV     R7,#0E0H
0028 7E03              MOV     R6,#03H
002A FD                MOV     R5,A
002B FC                MOV     R4,A
002C 900000      R     MOV     DPTR,#old_out
002F E0                MOVX    A,@DPTR
0030 F8                MOV     R0,A
0031 A3                INC     DPTR
0032 E0                MOVX    A,@DPTR
0033 F9                MOV     R1,A
0034 A3                INC     DPTR
0035 E0                MOVX    A,@DPTR
0036 FA                MOV     R2,A
0037 A3                INC     DPTR
0038 E0                MOVX    A,@DPTR
0039 FB                MOV     R3,A
C51 COMPILER V9.51   UTILS                                                                 03/27/2017 13:28:04 PAGE 28  

003A 120000      E     LCALL   ?C?LMUL
003D D003              POP     AR3
003F D002              POP     AR2
0041 D001              POP     AR1
0043 D000              POP     AR0
0045 EF                MOV     A,R7
0046 2B                ADD     A,R3
0047 FF                MOV     R7,A
0048 EE                MOV     A,R6
0049 3A                ADDC    A,R2
004A FE                MOV     R6,A
004B ED                MOV     A,R5
004C 39                ADDC    A,R1
004D FD                MOV     R5,A
004E EC                MOV     A,R4
004F 38                ADDC    A,R0
0050 FC                MOV     R4,A
0051 E4                CLR     A
0052 FB                MOV     R3,A
0053 7A04              MOV     R2,#04H
0055 F9                MOV     R1,A
0056 F8                MOV     R0,A
0057 120000      E     LCALL   ?C?SLDIV
005A 900000      R     MOV     DPTR,#aux
005D 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 191
0060 900000      R     MOV     DPTR,#aux
0063 E0                MOVX    A,@DPTR
0064 FC                MOV     R4,A
0065 A3                INC     DPTR
0066 E0                MOVX    A,@DPTR
0067 FD                MOV     R5,A
0068 A3                INC     DPTR
0069 E0                MOVX    A,@DPTR
006A FE                MOV     R6,A
006B A3                INC     DPTR
006C E0                MOVX    A,@DPTR
006D FF                MOV     R7,A
006E 900000      R     MOV     DPTR,#old_out
0071 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 193
0074 900000      R     MOV     DPTR,#aux
0077 E0                MOVX    A,@DPTR
0078 FC                MOV     R4,A
0079 A3                INC     DPTR
007A E0                MOVX    A,@DPTR
007B FD                MOV     R5,A
007C A3                INC     DPTR
007D E0                MOVX    A,@DPTR
007E FE                MOV     R6,A
007F A3                INC     DPTR
0080 E0                MOVX    A,@DPTR
0081 FF                MOV     R7,A
                                           ; SOURCE LINE # 194
0082         ?C0011:
0082 22                RET     
             ; FUNCTION _filter_acc_2 (END)

             ; FUNCTION _filter_acc_3 (BEGIN)
                                           ; SOURCE LINE # 196
0000 900000      R     MOV     DPTR,#new_value
0003 120000      E     LCALL   ?C?LSTXDATA
C51 COMPILER V9.51   UTILS                                                                 03/27/2017 13:28:04 PAGE 29  

                                           ; SOURCE LINE # 200
0006 E4                CLR     A
0007 7F20              MOV     R7,#020H
0009 FE                MOV     R6,A
000A FD                MOV     R5,A
000B FC                MOV     R4,A
000C 900000      R     MOV     DPTR,#new_value
000F E0                MOVX    A,@DPTR
0010 F8                MOV     R0,A
0011 A3                INC     DPTR
0012 E0                MOVX    A,@DPTR
0013 F9                MOV     R1,A
0014 A3                INC     DPTR
0015 E0                MOVX    A,@DPTR
0016 FA                MOV     R2,A
0017 A3                INC     DPTR
0018 E0                MOVX    A,@DPTR
0019 FB                MOV     R3,A
001A 120000      E     LCALL   ?C?LMUL
001D C004              PUSH    AR4
001F C005              PUSH    AR5
0021 C006              PUSH    AR6
0023 C007              PUSH    AR7
0025 E4                CLR     A
0026 7FE0              MOV     R7,#0E0H
0028 7E03              MOV     R6,#03H
002A FD                MOV     R5,A
002B FC                MOV     R4,A
002C 900000      R     MOV     DPTR,#old_out
002F E0                MOVX    A,@DPTR
0030 F8                MOV     R0,A
0031 A3                INC     DPTR
0032 E0                MOVX    A,@DPTR
0033 F9                MOV     R1,A
0034 A3                INC     DPTR
0035 E0                MOVX    A,@DPTR
0036 FA                MOV     R2,A
0037 A3                INC     DPTR
0038 E0                MOVX    A,@DPTR
0039 FB                MOV     R3,A
003A 120000      E     LCALL   ?C?LMUL
003D D003              POP     AR3
003F D002              POP     AR2
0041 D001              POP     AR1
0043 D000              POP     AR0
0045 EF                MOV     A,R7
0046 2B                ADD     A,R3
0047 FF                MOV     R7,A
0048 EE                MOV     A,R6
0049 3A                ADDC    A,R2
004A FE                MOV     R6,A
004B ED                MOV     A,R5
004C 39                ADDC    A,R1
004D FD                MOV     R5,A
004E EC                MOV     A,R4
004F 38                ADDC    A,R0
0050 FC                MOV     R4,A
0051 E4                CLR     A
0052 FB                MOV     R3,A
0053 7A04              MOV     R2,#04H
0055 F9                MOV     R1,A
0056 F8                MOV     R0,A
C51 COMPILER V9.51   UTILS                                                                 03/27/2017 13:28:04 PAGE 30  

0057 120000      E     LCALL   ?C?SLDIV
005A 900000      R     MOV     DPTR,#aux
005D 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 202
0060 900000      R     MOV     DPTR,#aux
0063 E0                MOVX    A,@DPTR
0064 FC                MOV     R4,A
0065 A3                INC     DPTR
0066 E0                MOVX    A,@DPTR
0067 FD                MOV     R5,A
0068 A3                INC     DPTR
0069 E0                MOVX    A,@DPTR
006A FE                MOV     R6,A
006B A3                INC     DPTR
006C E0                MOVX    A,@DPTR
006D FF                MOV     R7,A
006E 900000      R     MOV     DPTR,#old_out
0071 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 204
0074 900000      R     MOV     DPTR,#aux
0077 E0                MOVX    A,@DPTR
0078 FC                MOV     R4,A
0079 A3                INC     DPTR
007A E0                MOVX    A,@DPTR
007B FD                MOV     R5,A
007C A3                INC     DPTR
007D E0                MOVX    A,@DPTR
007E FE                MOV     R6,A
007F A3                INC     DPTR
0080 E0                MOVX    A,@DPTR
0081 FF                MOV     R7,A
                                           ; SOURCE LINE # 205
0082         ?C0012:
0082 22                RET     
             ; FUNCTION _filter_acc_3 (END)

             ; FUNCTION _check_enc_data (BEGIN)
                                           ; SOURCE LINE # 213
;---- Variable 'value' assigned to Register 'R1/R2/R3' ----
                                           ; SOURCE LINE # 215
0000 7800        R     MOV     R0,#LOW p
0002 A603              MOV     @R0,AR3
0004 08                INC     R0
0005 A602              MOV     @R0,AR2
0007 08                INC     R0
0008 A601              MOV     @R0,AR1
                                           ; SOURCE LINE # 216
000A 120000      E     LCALL   ?C?CLDPTR
000D F500        R     MOV     a,A
                                           ; SOURCE LINE # 218
000F 7800        R     MOV     R0,#LOW p
0011 8603              MOV     AR3,@R0
0013 08                INC     R0
0014 08                INC     R0
0015 06                INC     @R0
0016 E6                MOV     A,@R0
0017 18                DEC     R0
0018 7001              JNZ     ?C0048
001A 06                INC     @R0
001B         ?C0048:
001B F9                MOV     R1,A
001C 8602              MOV     AR2,@R0
C51 COMPILER V9.51   UTILS                                                                 03/27/2017 13:28:04 PAGE 31  

001E 120000      E     LCALL   ?C?CLDPTR
0021 6200        R     XRL     a,A
                                           ; SOURCE LINE # 219
0023 7800        R     MOV     R0,#LOW p
0025 8603              MOV     AR3,@R0
0027 08                INC     R0
0028 08                INC     R0
0029 06                INC     @R0
002A E6                MOV     A,@R0
002B 18                DEC     R0
002C 7001              JNZ     ?C0049
002E 06                INC     @R0
002F         ?C0049:
002F F9                MOV     R1,A
0030 8602              MOV     AR2,@R0
0032 120000      E     LCALL   ?C?CLDPTR
0035 6200        R     XRL     a,A
                                           ; SOURCE LINE # 220
0037 7800        R     MOV     R0,#LOW p
0039 8603              MOV     AR3,@R0
003B 08                INC     R0
003C 08                INC     R0
003D 06                INC     @R0
003E E6                MOV     A,@R0
003F 18                DEC     R0
0040 7001              JNZ     ?C0050
0042 06                INC     @R0
0043         ?C0050:
0043 F9                MOV     R1,A
0044 8602              MOV     AR2,@R0
0046 120000      E     LCALL   ?C?CLDPTR
0049 6200        R     XRL     a,A
                                           ; SOURCE LINE # 221
004B E500        R     MOV     A,a
004D C4                SWAP    A
004E 540F              ANL     A,#0FH
0050 FF                MOV     R7,A
0051 E500        R     MOV     A,a
0053 540F              ANL     A,#0FH
0055 6F                XRL     A,R7
0056 F500        R     MOV     a,A
                                           ; SOURCE LINE # 223
0058 FF                MOV     R7,A
0059 7469              MOV     A,#069H
005B 7E96              MOV     R6,#096H
005D A807              MOV     R0,AR7
005F 08                INC     R0
0060 8005              SJMP    ?C0052
0062         ?C0051:
0062 CE                XCH     A,R6
0063 C3                CLR     C
0064 13                RRC     A
0065 CE                XCH     A,R6
0066 13                RRC     A
0067         ?C0052:
0067 D8F9              DJNZ    R0,?C0051
0069 13                RRC     A
                                           ; SOURCE LINE # 225
006A         ?C0013:
006A 22                RET     
             ; FUNCTION _check_enc_data (END)

C51 COMPILER V9.51   UTILS                                                                 03/27/2017 13:28:04 PAGE 32  

             ; FUNCTION _my_round (BEGIN)
                                           ; SOURCE LINE # 231
0000 900000      R     MOV     DPTR,#x
0003 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 233
0006 E4                CLR     A
0007 FF                MOV     R7,A
0008 FE                MOV     R6,A
0009 FD                MOV     R5,A
000A FC                MOV     R4,A
000B 900000      R     MOV     DPTR,#x
000E E0                MOVX    A,@DPTR
000F F8                MOV     R0,A
0010 A3                INC     DPTR
0011 E0                MOVX    A,@DPTR
0012 F9                MOV     R1,A
0013 A3                INC     DPTR
0014 E0                MOVX    A,@DPTR
0015 FA                MOV     R2,A
0016 A3                INC     DPTR
0017 E0                MOVX    A,@DPTR
0018 FB                MOV     R3,A
0019 120000      E     LCALL   ?C?FPCMP3
001C 501B              JNC     ?C0014
                                           ; SOURCE LINE # 234
001E E4                CLR     A
001F FF                MOV     R7,A
0020 FE                MOV     R6,A
0021 FD                MOV     R5,A
0022 7CBF              MOV     R4,#0BFH
0024 900000      R     MOV     DPTR,#x
0027 E0                MOVX    A,@DPTR
0028 F8                MOV     R0,A
0029 A3                INC     DPTR
002A E0                MOVX    A,@DPTR
002B F9                MOV     R1,A
002C A3                INC     DPTR
002D E0                MOVX    A,@DPTR
002E FA                MOV     R2,A
002F A3                INC     DPTR
0030 E0                MOVX    A,@DPTR
0031 FB                MOV     R3,A
0032 120000      E     LCALL   ?C?FPADD
0035 120000      E     LCALL   ?C?CASTF
0038 22                RET     
0039         ?C0014:
                                           ; SOURCE LINE # 236
0039 E4                CLR     A
003A FF                MOV     R7,A
003B FE                MOV     R6,A
003C FD                MOV     R5,A
003D 7C3F              MOV     R4,#03FH
003F 900000      R     MOV     DPTR,#x
0042 E0                MOVX    A,@DPTR
0043 F8                MOV     R0,A
0044 A3                INC     DPTR
0045 E0                MOVX    A,@DPTR
0046 F9                MOV     R1,A
0047 A3                INC     DPTR
0048 E0                MOVX    A,@DPTR
0049 FA                MOV     R2,A
004A A3                INC     DPTR
C51 COMPILER V9.51   UTILS                                                                 03/27/2017 13:28:04 PAGE 33  

004B E0                MOVX    A,@DPTR
004C FB                MOV     R3,A
004D 120000      E     LCALL   ?C?FPADD
0050 120000      E     LCALL   ?C?CASTF
                                           ; SOURCE LINE # 237
0053         ?C0015:
0053 22                RET     
             ; FUNCTION _my_round (END)

             ; FUNCTION _my_mod (BEGIN)
                                           ; SOURCE LINE # 243
0000 900000      R     MOV     DPTR,#val
0003 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 245
0006 E4                CLR     A
0007 FF                MOV     R7,A
0008 FE                MOV     R6,A
0009 FD                MOV     R5,A
000A FC                MOV     R4,A
000B 900000      R     MOV     DPTR,#val
000E E0                MOVX    A,@DPTR
000F F8                MOV     R0,A
0010 A3                INC     DPTR
0011 E0                MOVX    A,@DPTR
0012 F9                MOV     R1,A
0013 A3                INC     DPTR
0014 E0                MOVX    A,@DPTR
0015 FA                MOV     R2,A
0016 A3                INC     DPTR
0017 E0                MOVX    A,@DPTR
0018 FB                MOV     R3,A
0019 C3                CLR     C
001A 120000      E     LCALL   ?C?SLCMP
001D 4028              JC      ?C0017
                                           ; SOURCE LINE # 246
001F 900000      R     MOV     DPTR,#divisor
0022 E0                MOVX    A,@DPTR
0023 F8                MOV     R0,A
0024 A3                INC     DPTR
0025 E0                MOVX    A,@DPTR
0026 F9                MOV     R1,A
0027 A3                INC     DPTR
0028 E0                MOVX    A,@DPTR
0029 FA                MOV     R2,A
002A A3                INC     DPTR
002B E0                MOVX    A,@DPTR
002C FB                MOV     R3,A
002D 900000      R     MOV     DPTR,#val
0030 E0                MOVX    A,@DPTR
0031 FC                MOV     R4,A
0032 A3                INC     DPTR
0033 E0                MOVX    A,@DPTR
0034 FD                MOV     R5,A
0035 A3                INC     DPTR
0036 E0                MOVX    A,@DPTR
0037 FE                MOV     R6,A
0038 A3                INC     DPTR
0039 E0                MOVX    A,@DPTR
003A FF                MOV     R7,A
003B 120000      E     LCALL   ?C?SLDIV
003E AC00              MOV     R4,AR0
0040 AD01              MOV     R5,AR1
C51 COMPILER V9.51   UTILS                                                                 03/27/2017 13:28:04 PAGE 34  

0042 AE02              MOV     R6,AR2
0044 AF03              MOV     R7,AR3
0046 22                RET     
                                           ; SOURCE LINE # 247
0047         ?C0017:
                                           ; SOURCE LINE # 248
0047 900000      R     MOV     DPTR,#val
004A E0                MOVX    A,@DPTR
004B FC                MOV     R4,A
004C A3                INC     DPTR
004D E0                MOVX    A,@DPTR
004E FD                MOV     R5,A
004F A3                INC     DPTR
0050 E0                MOVX    A,@DPTR
0051 FE                MOV     R6,A
0052 A3                INC     DPTR
0053 E0                MOVX    A,@DPTR
0054 FF                MOV     R7,A
0055 120000      E     LCALL   ?C?LNEG
0058 A3                INC     DPTR
0059 E0                MOVX    A,@DPTR
005A F8                MOV     R0,A
005B A3                INC     DPTR
005C E0                MOVX    A,@DPTR
005D F9                MOV     R1,A
005E A3                INC     DPTR
005F E0                MOVX    A,@DPTR
0060 FA                MOV     R2,A
0061 A3                INC     DPTR
0062 E0                MOVX    A,@DPTR
0063 FB                MOV     R3,A
0064 120000      E     LCALL   ?C?SLDIV
0067 900000      R     MOV     DPTR,#divisor
006A E0                MOVX    A,@DPTR
006B FC                MOV     R4,A
006C A3                INC     DPTR
006D E0                MOVX    A,@DPTR
006E FD                MOV     R5,A
006F A3                INC     DPTR
0070 E0                MOVX    A,@DPTR
0071 FE                MOV     R6,A
0072 A3                INC     DPTR
0073 E0                MOVX    A,@DPTR
0074 C3                CLR     C
0075 9B                SUBB    A,R3
0076 FF                MOV     R7,A
0077 EE                MOV     A,R6
0078 9A                SUBB    A,R2
0079 FE                MOV     R6,A
007A ED                MOV     A,R5
007B 99                SUBB    A,R1
007C FD                MOV     R5,A
007D EC                MOV     A,R4
007E 98                SUBB    A,R0
007F FC                MOV     R4,A
                                           ; SOURCE LINE # 249
                                           ; SOURCE LINE # 250
0080         ?C0018:
0080 22                RET     
             ; FUNCTION _my_mod (END)

             ; FUNCTION calibration (BEGIN)
C51 COMPILER V9.51   UTILS                                                                 03/27/2017 13:28:04 PAGE 35  

                                           ; SOURCE LINE # 257
                                           ; SOURCE LINE # 263
0000 900000      R     MOV     DPTR,#direction
0003 E0                MOVX    A,@DPTR
0004 707B              JNZ     ?C0020
                                           ; SOURCE LINE # 264
0006 900000      E     MOV     DPTR,#g_refNew
0009 E0                MOVX    A,@DPTR
000A F8                MOV     R0,A
000B A3                INC     DPTR
000C E0                MOVX    A,@DPTR
000D F9                MOV     R1,A
000E A3                INC     DPTR
000F E0                MOVX    A,@DPTR
0010 FA                MOV     R2,A
0011 A3                INC     DPTR
0012 E0                MOVX    A,@DPTR
0013 FB                MOV     R3,A
0014 C000              PUSH    AR0
0016 C001              PUSH    AR1
0018 C002              PUSH    AR2
001A C003              PUSH    AR3
001C 900000      E     MOV     DPTR,#g_mem+035H
001F E0                MOVX    A,@DPTR
0020 FF                MOV     R7,A
0021 900000      E     MOV     DPTR,#calib+02H
0024 E0                MOVX    A,@DPTR
0025 FE                MOV     R6,A
0026 A3                INC     DPTR
0027 E0                MOVX    A,@DPTR
0028 A807              MOV     R0,AR7
002A 08                INC     R0
002B 8005              SJMP    ?C0054
002D         ?C0053:
002D C3                CLR     C
002E 33                RLC     A
002F CE                XCH     A,R6
0030 33                RLC     A
0031 CE                XCH     A,R6
0032         ?C0054:
0032 D8F9              DJNZ    R0,?C0053
0034 FF                MOV     R7,A
0035 EE                MOV     A,R6
0036 33                RLC     A
0037 95E0              SUBB    A,ACC
0039 FD                MOV     R5,A
003A FC                MOV     R4,A
003B D003              POP     AR3
003D D002              POP     AR2
003F D001              POP     AR1
0041 D000              POP     AR0
0043 EB                MOV     A,R3
0044 2F                ADD     A,R7
0045 FF                MOV     R7,A
0046 EA                MOV     A,R2
0047 3E                ADDC    A,R6
0048 FE                MOV     R6,A
0049 E9                MOV     A,R1
004A 3D                ADDC    A,R5
004B FD                MOV     R5,A
004C E8                MOV     A,R0
004D 3C                ADDC    A,R4
C51 COMPILER V9.51   UTILS                                                                 03/27/2017 13:28:04 PAGE 36  

004E FC                MOV     R4,A
004F 900000      E     MOV     DPTR,#g_refNew
0052 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 265
0055 900000      E     MOV     DPTR,#g_mem+059H
0058 E0                MOVX    A,@DPTR
0059 FC                MOV     R4,A
005A A3                INC     DPTR
005B E0                MOVX    A,@DPTR
005C FD                MOV     R5,A
005D A3                INC     DPTR
005E E0                MOVX    A,@DPTR
005F FE                MOV     R6,A
0060 A3                INC     DPTR
0061 E0                MOVX    A,@DPTR
0062 FF                MOV     R7,A
0063 900000      E     MOV     DPTR,#g_refNew
0066 E0                MOVX    A,@DPTR
0067 F8                MOV     R0,A
0068 A3                INC     DPTR
0069 E0                MOVX    A,@DPTR
006A F9                MOV     R1,A
006B A3                INC     DPTR
006C E0                MOVX    A,@DPTR
006D FA                MOV     R2,A
006E A3                INC     DPTR
006F E0                MOVX    A,@DPTR
0070 FB                MOV     R3,A
0071 D3                SETB    C
0072 120000      E     LCALL   ?C?SLCMP
0075 5003              JNC     $ + 5H
0077 020000      R     LJMP    ?C0027
                                           ; SOURCE LINE # 266
007A 900000      R     MOV     DPTR,#direction
007D 7401              MOV     A,#01H
007F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 267
                                           ; SOURCE LINE # 268
0080 22                RET     
0081         ?C0020:
                                           ; SOURCE LINE # 269
0081 900000      E     MOV     DPTR,#g_refNew
0084 E0                MOVX    A,@DPTR
0085 FC                MOV     R4,A
0086 A3                INC     DPTR
0087 E0                MOVX    A,@DPTR
0088 FD                MOV     R5,A
0089 A3                INC     DPTR
008A E0                MOVX    A,@DPTR
008B FE                MOV     R6,A
008C A3                INC     DPTR
008D E0                MOVX    A,@DPTR
008E FF                MOV     R7,A
008F C004              PUSH    AR4
0091 C005              PUSH    AR5
0093 C006              PUSH    AR6
0095 C007              PUSH    AR7
0097 900000      E     MOV     DPTR,#g_mem+035H
009A E0                MOVX    A,@DPTR
009B FF                MOV     R7,A
009C 900000      E     MOV     DPTR,#calib+02H
009F E0                MOVX    A,@DPTR
C51 COMPILER V9.51   UTILS                                                                 03/27/2017 13:28:04 PAGE 37  

00A0 FE                MOV     R6,A
00A1 A3                INC     DPTR
00A2 E0                MOVX    A,@DPTR
00A3 A807              MOV     R0,AR7
00A5 08                INC     R0
00A6 8005              SJMP    ?C0056
00A8         ?C0055:
00A8 C3                CLR     C
00A9 33                RLC     A
00AA CE                XCH     A,R6
00AB 33                RLC     A
00AC CE                XCH     A,R6
00AD         ?C0056:
00AD D8F9              DJNZ    R0,?C0055
00AF FF                MOV     R7,A
00B0 FB                MOV     R3,A
00B1 AA06              MOV     R2,AR6
00B3 EA                MOV     A,R2
00B4 33                RLC     A
00B5 95E0              SUBB    A,ACC
00B7 F9                MOV     R1,A
00B8 F8                MOV     R0,A
00B9 D007              POP     AR7
00BB D006              POP     AR6
00BD D005              POP     AR5
00BF D004              POP     AR4
00C1 C3                CLR     C
00C2 EF                MOV     A,R7
00C3 9B                SUBB    A,R3
00C4 FF                MOV     R7,A
00C5 EE                MOV     A,R6
00C6 9A                SUBB    A,R2
00C7 FE                MOV     R6,A
00C8 ED                MOV     A,R5
00C9 99                SUBB    A,R1
00CA FD                MOV     R5,A
00CB EC                MOV     A,R4
00CC 98                SUBB    A,R0
00CD FC                MOV     R4,A
00CE 900000      E     MOV     DPTR,#g_refNew
00D1 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 270
00D4 E4                CLR     A
00D5 FF                MOV     R7,A
00D6 FE                MOV     R6,A
00D7 FD                MOV     R5,A
00D8 FC                MOV     R4,A
00D9 900000      E     MOV     DPTR,#g_refNew
00DC E0                MOVX    A,@DPTR
00DD F8                MOV     R0,A
00DE A3                INC     DPTR
00DF E0                MOVX    A,@DPTR
00E0 F9                MOV     R1,A
00E1 A3                INC     DPTR
00E2 E0                MOVX    A,@DPTR
00E3 FA                MOV     R2,A
00E4 A3                INC     DPTR
00E5 E0                MOVX    A,@DPTR
00E6 FB                MOV     R3,A
00E7 C3                CLR     C
00E8 120000      E     LCALL   ?C?SLCMP
00EB 4006              JC      ?C0024
C51 COMPILER V9.51   UTILS                                                                 03/27/2017 13:28:04 PAGE 38  

00ED 7E00              MOV     R6,#00H
00EF 7F01              MOV     R7,#01H
00F1 8004              SJMP    ?C0025
00F3         ?C0024:
00F3 7EFF              MOV     R6,#0FFH
00F5 7FFF              MOV     R7,#0FFH
00F7         ?C0025:
00F7 EF                MOV     A,R7
00F8 6401              XRL     A,#01H
00FA 4E                ORL     A,R6
00FB 6032              JZ      ?C0027
                                           ; SOURCE LINE # 271
00FD E4                CLR     A
00FE 900000      R     MOV     DPTR,#direction
0101 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 272
0102 900000      R     MOV     DPTR,#closure_counter+01H
0105 E0                MOVX    A,@DPTR
0106 04                INC     A
0107 F0                MOVX    @DPTR,A
0108 7006              JNZ     ?C0057
010A 900000      R     MOV     DPTR,#closure_counter
010D E0                MOVX    A,@DPTR
010E 04                INC     A
010F F0                MOVX    @DPTR,A
0110         ?C0057:
                                           ; SOURCE LINE # 273
0110 900000      R     MOV     DPTR,#closure_counter
0113 E0                MOVX    A,@DPTR
0114 FE                MOV     R6,A
0115 A3                INC     DPTR
0116 E0                MOVX    A,@DPTR
0117 FF                MOV     R7,A
0118 900000      E     MOV     DPTR,#calib+04H
011B E0                MOVX    A,@DPTR
011C B50610            CJNE    A,AR6,?C0027
011F A3                INC     DPTR
0120 E0                MOVX    A,@DPTR
0121 B5070B            CJNE    A,AR7,?C0027
                                           ; SOURCE LINE # 274
0124 E4                CLR     A
0125 900000      R     MOV     DPTR,#closure_counter
0128 F0                MOVX    @DPTR,A
0129 A3                INC     DPTR
012A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 275
012B 900000      E     MOV     DPTR,#calib
012E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 276
                                           ; SOURCE LINE # 277
                                           ; SOURCE LINE # 278
                                           ; SOURCE LINE # 279
012F         ?C0027:
012F 22                RET     
             ; FUNCTION calibration (END)

             ; FUNCTION hand_comparaison (BEGIN)
                                           ; SOURCE LINE # 286
                                           ; SOURCE LINE # 294
0000 900000      R     MOV     DPTR,#first_time
0003 E0                MOVX    A,@DPTR
0004 6010              JZ      ?C0028
C51 COMPILER V9.51   UTILS                                                                 03/27/2017 13:28:04 PAGE 39  

                                           ; SOURCE LINE # 296
0006 E4                CLR     A
0007 FF                MOV     R7,A
0008 FE                MOV     R6,A
0009 FD                MOV     R5,A
000A FC                MOV     R4,A
000B 900000      R     MOV     DPTR,#count
000E 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 297
0011 E4                CLR     A
0012 900000      R     MOV     DPTR,#first_time
0015 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 298
0016         ?C0028:
                                           ; SOURCE LINE # 300
0016 900000      R     MOV     DPTR,#mode
0019 E0                MOVX    A,@DPTR
001A 14                DEC     A
001B 7003              JNZ     $ + 5H
001D 020000      R     LJMP    ?C0032
0020 14                DEC     A
0021 7003              JNZ     $ + 5H
0023 020000      R     LJMP    ?C0034
0026 2402              ADD     A,#02H
0028 6003              JZ      $ + 5H
002A 020000      R     LJMP    ?C0029
                                           ; SOURCE LINE # 301
002D         ?C0030:
                                           ; SOURCE LINE # 302
002D 900000      E     MOV     DPTR,#hand_comp_closure
0030 E0                MOVX    A,@DPTR
0031 FC                MOV     R4,A
0032 A3                INC     DPTR
0033 E0                MOVX    A,@DPTR
0034 FD                MOV     R5,A
0035 A3                INC     DPTR
0036 E0                MOVX    A,@DPTR
0037 FE                MOV     R6,A
0038 A3                INC     DPTR
0039 E0                MOVX    A,@DPTR
003A FF                MOV     R7,A
003B 900000      E     MOV     DPTR,#g_refNew
003E 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 303
0041 900000      E     MOV     DPTR,#hand_comp_closure
0044 E0                MOVX    A,@DPTR
0045 FC                MOV     R4,A
0046 A3                INC     DPTR
0047 E0                MOVX    A,@DPTR
0048 FD                MOV     R5,A
0049 A3                INC     DPTR
004A E0                MOVX    A,@DPTR
004B FE                MOV     R6,A
004C A3                INC     DPTR
004D E0                MOVX    A,@DPTR
004E FF                MOV     R7,A
004F EC                MOV     A,R4
0050 120000      E     LCALL   ?C?FCASTL
0053 900000      E     MOV     DPTR,#hand_comp_closure_threshold
0056 E0                MOVX    A,@DPTR
0057 F8                MOV     R0,A
0058 A3                INC     DPTR
C51 COMPILER V9.51   UTILS                                                                 03/27/2017 13:28:04 PAGE 40  

0059 E0                MOVX    A,@DPTR
005A F9                MOV     R1,A
005B A3                INC     DPTR
005C E0                MOVX    A,@DPTR
005D FA                MOV     R2,A
005E A3                INC     DPTR
005F E0                MOVX    A,@DPTR
0060 FB                MOV     R3,A
0061 120000      E     LCALL   ?C?FPMUL
0064 C004              PUSH    AR4
0066 C005              PUSH    AR5
0068 C006              PUSH    AR6
006A C007              PUSH    AR7
006C 900000      E     MOV     DPTR,#g_meas
006F E0                MOVX    A,@DPTR
0070 FC                MOV     R4,A
0071 A3                INC     DPTR
0072 E0                MOVX    A,@DPTR
0073 FD                MOV     R5,A
0074 A3                INC     DPTR
0075 E0                MOVX    A,@DPTR
0076 FE                MOV     R6,A
0077 A3                INC     DPTR
0078 E0                MOVX    A,@DPTR
0079 FF                MOV     R7,A
007A EC                MOV     A,R4
007B 120000      E     LCALL   ?C?FCASTL
007E A804              MOV     R0,AR4
0080 A905              MOV     R1,AR5
0082 AA06              MOV     R2,AR6
0084 AB07              MOV     R3,AR7
0086 D007              POP     AR7
0088 D006              POP     AR6
008A D005              POP     AR5
008C D004              POP     AR4
008E 120000      E     LCALL   ?C?FPCMP3
0091 6002              JZ      $ + 4H
0093 5003              JNC     $ + 5H
0095 020000      R     LJMP    ?C0029
                                           ; SOURCE LINE # 304
0098 900000      E     MOV     DPTR,#hand_comp_current_mode
009B 7401              MOV     A,#01H
009D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 305
009E E4                CLR     A
009F FF                MOV     R7,A
00A0 FE                MOV     R6,A
00A1 FD                MOV     R5,A
00A2 FC                MOV     R4,A
00A3 900000      E     MOV     DPTR,#g_refNew+010H
00A6 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 306
00A9 900000      R     MOV     DPTR,#mode
00AC 7401              MOV     A,#01H
00AE F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 307
                                           ; SOURCE LINE # 308
00AF 020000      R     LJMP    ?C0029
                                           ; SOURCE LINE # 309
00B2         ?C0032:
                                           ; SOURCE LINE # 310
00B2 E4                CLR     A
C51 COMPILER V9.51   UTILS                                                                 03/27/2017 13:28:04 PAGE 41  

00B3 FF                MOV     R7,A
00B4 FE                MOV     R6,A
00B5 FD                MOV     R5,A
00B6 FC                MOV     R4,A
00B7 900000      E     MOV     DPTR,#g_refNew+010H
00BA 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 312
00BD E4                CLR     A
00BE 7B10              MOV     R3,#010H
00C0 7A27              MOV     R2,#027H
00C2 F9                MOV     R1,A
00C3 F8                MOV     R0,A
00C4 900000      E     MOV     DPTR,#hand_comp_reactivation_time
00C7 E0                MOVX    A,@DPTR
00C8 FC                MOV     R4,A
00C9 A3                INC     DPTR
00CA E0                MOVX    A,@DPTR
00CB FD                MOV     R5,A
00CC A3                INC     DPTR
00CD E0                MOVX    A,@DPTR
00CE FE                MOV     R6,A
00CF A3                INC     DPTR
00D0 E0                MOVX    A,@DPTR
00D1 FF                MOV     R7,A
00D2 120000      E     LCALL   ?C?ULDIV
00D5 900000      R     MOV     DPTR,#count
00D8 E0                MOVX    A,@DPTR
00D9 F8                MOV     R0,A
00DA A3                INC     DPTR
00DB E0                MOVX    A,@DPTR
00DC F9                MOV     R1,A
00DD A3                INC     DPTR
00DE E0                MOVX    A,@DPTR
00DF FA                MOV     R2,A
00E0 A3                INC     DPTR
00E1 E0                MOVX    A,@DPTR
00E2 FB                MOV     R3,A
00E3 C3                CLR     C
00E4 120000      E     LCALL   ?C?ULCMP
00E7 6003              JZ      $ + 5H
00E9 020000      R     LJMP    ?C0029
                                           ; SOURCE LINE # 314
00EC 900000      E     MOV     DPTR,#hand_comp_current_mode
00EF F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 315
00F0 900000      R     MOV     DPTR,#mode
00F3 7402              MOV     A,#02H
00F5 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 316
                                           ; SOURCE LINE # 317
00F6 8076              SJMP    ?C0029
                                           ; SOURCE LINE # 318
00F8         ?C0034:
                                           ; SOURCE LINE # 319
00F8 E4                CLR     A
00F9 FF                MOV     R7,A
00FA FE                MOV     R6,A
00FB FD                MOV     R5,A
00FC FC                MOV     R4,A
00FD 900000      E     MOV     DPTR,#g_refNew
0100 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 320
C51 COMPILER V9.51   UTILS                                                                 03/27/2017 13:28:04 PAGE 42  

0103 E4                CLR     A
0104 7F64              MOV     R7,#064H
0106 FE                MOV     R6,A
0107 FD                MOV     R5,A
0108 FC                MOV     R4,A
0109 900000      E     MOV     DPTR,#g_meas
010C E0                MOVX    A,@DPTR
010D F8                MOV     R0,A
010E A3                INC     DPTR
010F E0                MOVX    A,@DPTR
0110 F9                MOV     R1,A
0111 A3                INC     DPTR
0112 E0                MOVX    A,@DPTR
0113 FA                MOV     R2,A
0114 A3                INC     DPTR
0115 E0                MOVX    A,@DPTR
0116 FB                MOV     R3,A
0117 C3                CLR     C
0118 120000      E     LCALL   ?C?SLCMP
011B 5051              JNC     ?C0029
011D E4                CLR     A
011E 7FE8              MOV     R7,#0E8H
0120 7E03              MOV     R6,#03H
0122 FD                MOV     R5,A
0123 FC                MOV     R4,A
0124 900000      R     MOV     DPTR,#count
0127 E0                MOVX    A,@DPTR
0128 F8                MOV     R0,A
0129 A3                INC     DPTR
012A E0                MOVX    A,@DPTR
012B F9                MOV     R1,A
012C A3                INC     DPTR
012D E0                MOVX    A,@DPTR
012E FA                MOV     R2,A
012F A3                INC     DPTR
0130 E0                MOVX    A,@DPTR
0131 FB                MOV     R3,A
0132 C3                CLR     C
0133 120000      E     LCALL   ?C?ULCMP
0136 7036              JNZ     ?C0029
                                           ; SOURCE LINE # 321
0138 900000      R     MOV     DPTR,#mode
013B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 322
013C 900000      R     MOV     DPTR,#first_time
013F 04                INC     A
0140 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 323
0141 900000      R     MOV     DPTR,#closure_counter+01H
0144 E0                MOVX    A,@DPTR
0145 04                INC     A
0146 F0                MOVX    @DPTR,A
0147 7006              JNZ     ?C0059
0149 900000      R     MOV     DPTR,#closure_counter
014C E0                MOVX    A,@DPTR
014D 04                INC     A
014E F0                MOVX    @DPTR,A
014F         ?C0059:
                                           ; SOURCE LINE # 324
014F 900000      R     MOV     DPTR,#closure_counter
0152 E0                MOVX    A,@DPTR
0153 FE                MOV     R6,A
C51 COMPILER V9.51   UTILS                                                                 03/27/2017 13:28:04 PAGE 43  

0154 A3                INC     DPTR
0155 E0                MOVX    A,@DPTR
0156 FF                MOV     R7,A
0157 900000      E     MOV     DPTR,#hand_comp_calib+04H
015A E0                MOVX    A,@DPTR
015B B50610            CJNE    A,AR6,?C0029
015E A3                INC     DPTR
015F E0                MOVX    A,@DPTR
0160 B5070B            CJNE    A,AR7,?C0029
                                           ; SOURCE LINE # 325
0163 E4                CLR     A
0164 900000      R     MOV     DPTR,#closure_counter
0167 F0                MOVX    @DPTR,A
0168 A3                INC     DPTR
0169 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 326
016A 900000      E     MOV     DPTR,#hand_comp_calib
016D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 327
                                           ; SOURCE LINE # 328
                                           ; SOURCE LINE # 329
                                           ; SOURCE LINE # 331
016E         ?C0029:
                                           ; SOURCE LINE # 333
016E 900000      R     MOV     DPTR,#count
0171 E0                MOVX    A,@DPTR
0172 FC                MOV     R4,A
0173 A3                INC     DPTR
0174 E0                MOVX    A,@DPTR
0175 FD                MOV     R5,A
0176 A3                INC     DPTR
0177 E0                MOVX    A,@DPTR
0178 FE                MOV     R6,A
0179 A3                INC     DPTR
017A E0                MOVX    A,@DPTR
017B 2401              ADD     A,#01H
017D FF                MOV     R7,A
017E E4                CLR     A
017F 3E                ADDC    A,R6
0180 FE                MOV     R6,A
0181 E4                CLR     A
0182 3D                ADDC    A,R5
0183 FD                MOV     R5,A
0184 E4                CLR     A
0185 3C                ADDC    A,R4
0186 FC                MOV     R4,A
0187 900000      R     MOV     DPTR,#count
018A 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 334
018D 22                RET     
             ; FUNCTION hand_comparaison (END)

             ; FUNCTION handle_check_mode (BEGIN)
                                           ; SOURCE LINE # 341
                                           ; SOURCE LINE # 346
0000 900000      E     MOV     DPTR,#c_mem+079H
0003 E0                MOVX    A,@DPTR
0004 6030              JZ      ?C0038
                                           ; SOURCE LINE # 347
0006 900000      E     MOV     DPTR,#g_measOld+08H
0009 E0                MOVX    A,@DPTR
000A A3                INC     DPTR
C51 COMPILER V9.51   UTILS                                                                 03/27/2017 13:28:04 PAGE 44  

000B E0                MOVX    A,@DPTR
000C A3                INC     DPTR
000D E0                MOVX    A,@DPTR
000E FE                MOV     R6,A
000F A3                INC     DPTR
0010 E0                MOVX    A,@DPTR
0011 FB                MOV     R3,A
0012 AA06              MOV     R2,AR6
0014 900000      E     MOV     DPTR,#g_meas+08H
0017 E0                MOVX    A,@DPTR
0018 A3                INC     DPTR
0019 E0                MOVX    A,@DPTR
001A A3                INC     DPTR
001B E0                MOVX    A,@DPTR
001C FE                MOV     R6,A
001D A3                INC     DPTR
001E E0                MOVX    A,@DPTR
001F C3                CLR     C
0020 9B                SUBB    A,R3
0021 FF                MOV     R7,A
0022 EE                MOV     A,R6
0023 9A                SUBB    A,R2
0024 FE                MOV     R6,A
0025 120000      E     LCALL   _abs
0028 EE                MOV     A,R6
0029 33                RLC     A
002A 95E0              SUBB    A,ACC
002C FD                MOV     R5,A
002D FC                MOV     R4,A
002E 900000      R     MOV     DPTR,#meas_error
0031 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 348
0034 802E              SJMP    ?C0039
0036         ?C0038:
                                           ; SOURCE LINE # 349
0036 900000      E     MOV     DPTR,#g_measOld+04H
0039 E0                MOVX    A,@DPTR
003A A3                INC     DPTR
003B E0                MOVX    A,@DPTR
003C A3                INC     DPTR
003D E0                MOVX    A,@DPTR
003E FE                MOV     R6,A
003F A3                INC     DPTR
0040 E0                MOVX    A,@DPTR
0041 FB                MOV     R3,A
0042 AA06              MOV     R2,AR6
0044 900000      E     MOV     DPTR,#g_meas+04H
0047 E0                MOVX    A,@DPTR
0048 A3                INC     DPTR
0049 E0                MOVX    A,@DPTR
004A A3                INC     DPTR
004B E0                MOVX    A,@DPTR
004C FE                MOV     R6,A
004D A3                INC     DPTR
004E E0                MOVX    A,@DPTR
004F C3                CLR     C
0050 9B                SUBB    A,R3
0051 FF                MOV     R7,A
0052 EE                MOV     A,R6
0053 9A                SUBB    A,R2
0054 FE                MOV     R6,A
0055 120000      E     LCALL   _abs
C51 COMPILER V9.51   UTILS                                                                 03/27/2017 13:28:04 PAGE 45  

0058 EE                MOV     A,R6
0059 33                RLC     A
005A 95E0              SUBB    A,ACC
005C FD                MOV     R5,A
005D FC                MOV     R4,A
005E 900000      R     MOV     DPTR,#meas_error
0061 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 350
0064         ?C0039:
                                           ; SOURCE LINE # 353
0064 900000      E     MOV     DPTR,#c_mem+09AH
0067 E0                MOVX    A,@DPTR
0068 FC                MOV     R4,A
0069 A3                INC     DPTR
006A E0                MOVX    A,@DPTR
006B FD                MOV     R5,A
006C A3                INC     DPTR
006D E0                MOVX    A,@DPTR
006E FE                MOV     R6,A
006F A3                INC     DPTR
0070 E0                MOVX    A,@DPTR
0071 FF                MOV     R7,A
0072 900000      R     MOV     DPTR,#meas_error
0075 E0                MOVX    A,@DPTR
0076 F8                MOV     R0,A
0077 A3                INC     DPTR
0078 E0                MOVX    A,@DPTR
0079 F9                MOV     R1,A
007A A3                INC     DPTR
007B E0                MOVX    A,@DPTR
007C FA                MOV     R2,A
007D A3                INC     DPTR
007E E0                MOVX    A,@DPTR
007F FB                MOV     R3,A
0080 C3                CLR     C
0081 120000      E     LCALL   ?C?ULCMP
0084 5076              JNC     ?C0040
                                           ; SOURCE LINE # 355
0086 900000      R     MOV     DPTR,#first_time
0089 E0                MOVX    A,@DPTR
008A 600F              JZ      ?C0041
                                           ; SOURCE LINE # 356
008C E4                CLR     A
008D FF                MOV     R7,A
008E FE                MOV     R6,A
008F FD                MOV     R5,A
0090 FC                MOV     R4,A
0091 A3                INC     DPTR
0092 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 357
0095 E4                CLR     A
0096 900000      R     MOV     DPTR,#first_time
0099 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 358
009A 22                RET     
009B         ?C0041:
                                           ; SOURCE LINE # 359
                                           ; SOURCE LINE # 360
009B E4                CLR     A
009C FF                MOV     R7,A
009D FE                MOV     R6,A
009E 7DC8              MOV     R5,#0C8H
C51 COMPILER V9.51   UTILS                                                                 03/27/2017 13:28:04 PAGE 46  

00A0 7C42              MOV     R4,#042H
00A2 900000      E     MOV     DPTR,#c_mem+096H
00A5 E0                MOVX    A,@DPTR
00A6 F8                MOV     R0,A
00A7 A3                INC     DPTR
00A8 E0                MOVX    A,@DPTR
00A9 F9                MOV     R1,A
00AA A3                INC     DPTR
00AB E0                MOVX    A,@DPTR
00AC FA                MOV     R2,A
00AD A3                INC     DPTR
00AE E0                MOVX    A,@DPTR
00AF FB                MOV     R3,A
00B0 120000      E     LCALL   ?C?FPMUL
00B3 120000      E     LCALL   ?C?CASTF
00B6 900000      R     MOV     DPTR,#count
00B9 E0                MOVX    A,@DPTR
00BA F8                MOV     R0,A
00BB A3                INC     DPTR
00BC E0                MOVX    A,@DPTR
00BD F9                MOV     R1,A
00BE A3                INC     DPTR
00BF E0                MOVX    A,@DPTR
00C0 FA                MOV     R2,A
00C1 A3                INC     DPTR
00C2 E0                MOVX    A,@DPTR
00C3 FB                MOV     R3,A
00C4 C3                CLR     C
00C5 120000      E     LCALL   ?C?ULCMP
00C8 4012              JC      ?C0043
                                           ; SOURCE LINE # 361
00CA 900000      E     MOV     DPTR,#hand_comp_current_mode
00CD 7401              MOV     A,#01H
00CF F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 362
00D0 E4                CLR     A
00D1 FF                MOV     R7,A
00D2 FE                MOV     R6,A
00D3 FD                MOV     R5,A
00D4 FC                MOV     R4,A
00D5 900000      E     MOV     DPTR,#g_refNew+010H
00D8 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 363
00DB 22                RET     
00DC         ?C0043:
                                           ; SOURCE LINE # 364
                                           ; SOURCE LINE # 365
00DC 900000      R     MOV     DPTR,#count
00DF E0                MOVX    A,@DPTR
00E0 FC                MOV     R4,A
00E1 A3                INC     DPTR
00E2 E0                MOVX    A,@DPTR
00E3 FD                MOV     R5,A
00E4 A3                INC     DPTR
00E5 E0                MOVX    A,@DPTR
00E6 FE                MOV     R6,A
00E7 A3                INC     DPTR
00E8 E0                MOVX    A,@DPTR
00E9 2401              ADD     A,#01H
00EB FF                MOV     R7,A
00EC E4                CLR     A
00ED 3E                ADDC    A,R6
C51 COMPILER V9.51   UTILS                                                                 03/27/2017 13:28:04 PAGE 47  

00EE FE                MOV     R6,A
00EF E4                CLR     A
00F0 3D                ADDC    A,R5
00F1 FD                MOV     R5,A
00F2 E4                CLR     A
00F3 3C                ADDC    A,R4
00F4 FC                MOV     R4,A
00F5 900000      R     MOV     DPTR,#count
00F8 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 366
                                           ; SOURCE LINE # 367
                                           ; SOURCE LINE # 369
00FB 22                RET     
00FC         ?C0040:
                                           ; SOURCE LINE # 370
                                           ; SOURCE LINE # 372
00FC E4                CLR     A
00FD FF                MOV     R7,A
00FE FE                MOV     R6,A
00FF FD                MOV     R5,A
0100 FC                MOV     R4,A
0101 900000      R     MOV     DPTR,#count
0104 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 373
0107 E4                CLR     A
0108 900000      E     MOV     DPTR,#hand_comp_current_mode
010B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 374
                                           ; SOURCE LINE # 376
010C         ?C0046:
010C 22                RET     
             ; FUNCTION handle_check_mode (END)

             ; FUNCTION _calc_turns_fcn (BEGIN)
                                           ; SOURCE LINE # 411
0000 900000      R     MOV     DPTR,#pos1
0003 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 413
0006 E4                CLR     A
0007 7F1C              MOV     R7,#01CH
0009 FE                MOV     R6,A
000A FD                MOV     R5,A
000B FC                MOV     R4,A
000C 900000      R     MOV     DPTR,#pos1
000F E0                MOVX    A,@DPTR
0010 F8                MOV     R0,A
0011 A3                INC     DPTR
0012 E0                MOVX    A,@DPTR
0013 F9                MOV     R1,A
0014 A3                INC     DPTR
0015 E0                MOVX    A,@DPTR
0016 FA                MOV     R2,A
0017 A3                INC     DPTR
0018 E0                MOVX    A,@DPTR
0019 FB                MOV     R3,A
001A 120000      E     LCALL   ?C?LMUL
001D C004              PUSH    AR4
001F C005              PUSH    AR5
0021 C006              PUSH    AR6
0023 C007              PUSH    AR7
0025 74FF              MOV     A,#0FFH
0027 7FE5              MOV     R7,#0E5H
C51 COMPILER V9.51   UTILS                                                                 03/27/2017 13:28:04 PAGE 48  

0029 FE                MOV     R6,A
002A FD                MOV     R5,A
002B FC                MOV     R4,A
002C 900000      R     MOV     DPTR,#pos2
002F E0                MOVX    A,@DPTR
0030 F8                MOV     R0,A
0031 A3                INC     DPTR
0032 E0                MOVX    A,@DPTR
0033 F9                MOV     R1,A
0034 A3                INC     DPTR
0035 E0                MOVX    A,@DPTR
0036 FA                MOV     R2,A
0037 A3                INC     DPTR
0038 E0                MOVX    A,@DPTR
0039 FB                MOV     R3,A
003A 120000      E     LCALL   ?C?LMUL
003D D003              POP     AR3
003F D002              POP     AR2
0041 D001              POP     AR1
0043 D000              POP     AR0
0045 C3                CLR     C
0046 EF                MOV     A,R7
0047 9B                SUBB    A,R3
0048 FF                MOV     R7,A
0049 EE                MOV     A,R6
004A 9A                SUBB    A,R2
004B FE                MOV     R6,A
004C ED                MOV     A,R5
004D 99                SUBB    A,R1
004E FD                MOV     R5,A
004F EC                MOV     A,R4
0050 98                SUBB    A,R0
0051 FC                MOV     R4,A
0052 C004              PUSH    AR4
0054 C005              PUSH    AR5
0056 C006              PUSH    AR6
0058 C007              PUSH    AR7
005A E4                CLR     A
005B FF                MOV     R7,A
005C FE                MOV     R6,A
005D 7D1B              MOV     R5,#01BH
005F FC                MOV     R4,A
0060 900000      R     MOV     DPTR,#?_my_mod?BYTE+04H
0063 120000      E     LCALL   ?C?LSTXDATA
0066 D007              POP     AR7
0068 D006              POP     AR6
006A D005              POP     AR5
006C D004              POP     AR4
006E 120000      R     LCALL   _my_mod
0071 E4                CLR     A
0072 2F                ADD     A,R7
0073 FF                MOV     R7,A
0074 EE                MOV     A,R6
0075 3480              ADDC    A,#080H
0077 FE                MOV     R6,A
0078 E4                CLR     A
0079 3D                ADDC    A,R5
007A FD                MOV     R5,A
007B E4                CLR     A
007C 3C                ADDC    A,R4
007D FC                MOV     R4,A
007E E4                CLR     A
C51 COMPILER V9.51   UTILS                                                                 03/27/2017 13:28:04 PAGE 49  

007F FB                MOV     R3,A
0080 FA                MOV     R2,A
0081 7901              MOV     R1,#01H
0083 F8                MOV     R0,A
0084 120000      E     LCALL   ?C?ULDIV
;---- Variable 'x' assigned to Register 'R4/R5/R6/R7' ----
                                           ; SOURCE LINE # 415
0087 C004              PUSH    AR4
0089 C005              PUSH    AR5
008B C006              PUSH    AR6
008D C007              PUSH    AR7
008F E4                CLR     A
0090 7F1B              MOV     R7,#01BH
0092 FE                MOV     R6,A
0093 FD                MOV     R5,A
0094 FC                MOV     R4,A
0095 900000      R     MOV     DPTR,#?_my_mod?BYTE+04H
0098 120000      E     LCALL   ?C?LSTXDATA
009B D007              POP     AR7
009D D006              POP     AR6
009F D005              POP     AR5
00A1 D004              POP     AR4
00A3 120000      R     LCALL   _my_mod
;---- Variable 'aux' assigned to Register 'R4/R5/R6/R7' ----
                                           ; SOURCE LINE # 417
00A6 EF                MOV     A,R7
00A7 240D              ADD     A,#0DH
00A9 FF                MOV     R7,A
00AA E4                CLR     A
00AB 3E                ADDC    A,R6
00AC FE                MOV     R6,A
00AD E4                CLR     A
00AE 3D                ADDC    A,R5
00AF FD                MOV     R5,A
00B0 E4                CLR     A
00B1 3C                ADDC    A,R4
00B2 FC                MOV     R4,A
00B3 C004              PUSH    AR4
00B5 C005              PUSH    AR5
00B7 C006              PUSH    AR6
00B9 C007              PUSH    AR7
00BB E4                CLR     A
00BC 7F1B              MOV     R7,#01BH
00BE FE                MOV     R6,A
00BF FD                MOV     R5,A
00C0 FC                MOV     R4,A
00C1 900000      R     MOV     DPTR,#?_my_mod?BYTE+04H
00C4 120000      E     LCALL   ?C?LSTXDATA
00C7 D007              POP     AR7
00C9 D006              POP     AR6
00CB D005              POP     AR5
00CD D004              POP     AR4
00CF 120000      R     LCALL   _my_mod
00D2 EF                MOV     A,R7
00D3 24F3              ADD     A,#0F3H
00D5 FF                MOV     R7,A
00D6 EE                MOV     A,R6
00D7 34FF              ADDC    A,#0FFH
00D9 FE                MOV     R6,A
                                           ; SOURCE LINE # 418
00DA         ?C0047:
00DA 22                RET     
C51 COMPILER V9.51   UTILS                                                                 03/27/2017 13:28:04 PAGE 50  

             ; FUNCTION _calc_turns_fcn (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   3389    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    112      68
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       1
   IDATA SIZE       =   ----       3
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
